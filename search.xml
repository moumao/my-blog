<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Sponsors]]></title>
      <url>/2017/05/17/sponsors/</url>
      <content type="html"><![CDATA[<p><img src="https://spacevim.org/img/bountysource.png" alt="Bountysource"></p>
<p>If you want to support SpaceVim, please check out our <a href="https://www.bountysource.com/teams/spacevim" target="_blank" rel="external">Bountysource campaign</a>.</p>
<p>Also, you can buy me a coffee:</p>
<p><a href="https://ko-fi.com/A538L6H" target="_blank"><img height="36" style="border:0px;height:36px;" src="https://az743702.vo.msecnd.net/cdn/kofi4.png?v=f" border="0" alt="Buy Me a Coffee at ko-fi.com"></a> </p>
<p>if you are a chinese, It will be more easy in wechat.</p>
<p><img src="https://spacevim.org/img/buy_me_a_coffee.png" alt="Buy me a coffee"></p>
<h1 id="Current-Sponsors"><a href="#Current-Sponsors" class="headerlink" title="Current Sponsors"></a>Current Sponsors</h1><p>These are the companies or individuals contributing a monthly amount to help sustain SpaceVim’s development.<br>See the <a href="https://www.bountysource.com/teams/spacevim" target="_blank" rel="external">Bountysource campaign</a> for more details.</p>
<table>
<thead>
<tr>
<th>Date</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>2017-2-23</td>
<td>user from wechat contributed ¥40 to SpaceVim</td>
</tr>
<tr>
<td>2017-2-14</td>
<td>user from wechat contributed ¥100 to SpaceVim</td>
</tr>
</tbody>
</table>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Development]]></title>
      <url>/2017/05/17//development/</url>
      <content type="html"><![CDATA[<h1 id="Development"><a href="#Development" class="headerlink" title="Development"></a>Development</h1><p>Development happens in the GitHub repository. here is a throughput graph of the repository for the last few weeks:</p>
<p><a href="https://waffle.io/SpaceVim/SpaceVim/metrics/throughput" target="_blank" rel="external"><img src="https://graphs.waffle.io/SpaceVim/SpaceVim/throughput.svg" alt="Throughput Graph"></a></p>
<h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><ul>
<li><a href="#contribution-guidelines">Contribution guidelines</a><ul>
<li><a href="#asking-for-help">Asking for help</a></li>
<li><a href="#reporting-issues">Reporting issues</a></li>
<li><a href="#contributing-code">Contributing code</a></li>
</ul>
</li>
<li><a href="#build-with-spacevim">Build with SpaceVim</a></li>
<li><a href="#changelog">Changelog</a></li>
</ul>
<h2 id="Contribution-guidelines"><a href="#Contribution-guidelines" class="headerlink" title="Contribution guidelines"></a>Contribution guidelines</h2><p>SpaceVim is a effort of all the volunteers, we encourage you to pitch in. The community makes SpaceVim what it is.<br>We have a few guidelines, which we ask all contributors to follow.</p>
<p>You can only consider reading the sections relevant to what you are going to do:</p>
<ul>
<li><a href="#asking-for-help">Asking for help</a> if you are about to open an issue to ask a question.</li>
<li><a href="#reporting-issues">Reporting issues</a> if you are about to open a new issue.</li>
<li><a href="#contributing-code">Contributing code</a> if you are about to send a Pull-Request.</li>
</ul>
<h3 id="Asking-for-help"><a href="#Asking-for-help" class="headerlink" title="Asking for help"></a>Asking for help</h3><p>If you want to ask an usage question, be sure to look first into some places as it may hold the answers:</p>
<ul>
<li><kbd>:h SpaceVim-faq</kbd>: Some of the most frequently asked questions are answered there.</li>
<li><a href="https://spacevim.org/documentation" target="_blank" rel="external">SpaceVim documentation</a>: It is the general documentation of SpaceVim.</li>
</ul>
<h3 id="Reporting-issues"><a href="#Reporting-issues" class="headerlink" title="Reporting issues"></a>Reporting issues</h3><p>issues have to be reported on <a href="https://github.com/SpaceVim/SpaceVim/issues" target="_blank" rel="external">issues tracker</a>, Please:</p>
<ul>
<li>Check that there is no duplicate issue in the issues tracker, you can search keywords in the issues tracker.</li>
<li>Check that the issue has not been fixed in latest version of SpaceVim, please update your SpaceVim, and try to reproduce the bug here.</li>
<li>Use a clear title and follow the issue template.</li>
<li>Include details on how to reproduce it, just like a step by step guide.</li>
</ul>
<h3 id="Contributing-code"><a href="#Contributing-code" class="headerlink" title="Contributing code"></a>Contributing code</h3><p>Code contributions are welcome. Please read the following sections carefully. In any case, feel free to join us on the <a href="https://gitter.im/SpaceVim/SpaceVim" target="_blank" rel="external">gitter chat</a> to ask questions about contributing!</p>
<h4 id="License"><a href="#License" class="headerlink" title="License"></a>License</h4><p>The license is MIT for all the parts of SpaceVim. this includes:</p>
<ul>
<li>The initialization and core files</li>
<li>All the layer files.</li>
</ul>
<p>For files not belonging to Spacemacs like local packages and libraries, refer to the header file. Those files should not have an empty header, we may not accept code without a proper header file.</p>
<h4 id="Conventions"><a href="#Conventions" class="headerlink" title="Conventions"></a>Conventions</h4><p>SpaceVim is based on conventions, mainly for naming functions, keybindings definition and writing documentation. Please read the <a href="https://spacevim.org/development/conventions" target="_blank" rel="external">conventions</a> before your first contribution to get to know them.</p>
<h4 id="Pull-Request"><a href="#Pull-Request" class="headerlink" title="Pull Request"></a>Pull Request</h4><p>Submit your contribution against the <code>dev</code> branch. You should not use your master branch to modify SpaceVim, this branch is considered to be read-only.</p>
<p>You may want to read our beginner’s guide for Pull Requests.</p>
<p>PR = Pull-Request</p>
<h5 id="Ideally-for-simple-PRs-most-of-them"><a href="#Ideally-for-simple-PRs-most-of-them" class="headerlink" title="Ideally for simple PRs (most of them):"></a>Ideally for simple PRs (most of them):</h5><ul>
<li>Branch from <code>dev</code></li>
<li>One topic per PR</li>
<li>One commit per PR</li>
<li>If you have several commits on different topics, close the PR and create one PR per topic</li>
<li>If you still have several commits, squash them into only one commit</li>
<li>Rebase your PR branch on top of upstream develop before submitting the PR</li>
</ul>
<p>Those PRs are usually cherry-picked.</p>
<h5 id="For-complex-PRs-big-refactoring-etc"><a href="#For-complex-PRs-big-refactoring-etc" class="headerlink" title="For complex PRs (big refactoring, etc):"></a>For complex PRs (big refactoring, etc):</h5><p>Squash only the commits with uninteresting changes like typos, syntax fixes, etc… and keep the important and isolated steps in different commits.</p>
<p>Those PRs are merged and explicitly not fast-forwarded.<br>Commit messages</p>
<p>Write commit messages according to adapted <a href="http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html" target="_blank" rel="external">Tim Pope’s guidelines</a>:</p>
<ul>
<li>Use present tense and write in the imperative: “Fix bug”, not “fixed bug” or “fixes bug”.</li>
<li>Start with a capitalized, short (72 characters or less) summary, followed by a blank line.</li>
<li>If necessary, add one or more paragraphs with details, wrapped at 72 characters.</li>
<li>Separate paragraphs by blank lines.</li>
</ul>
<p>This is a model commit message:</p>
<pre><code>Capitalized, short (72 chars or less) summary

More detailed explanatory text, if necessary.  Wrap it to about 72
characters or so.  In some contexts, the first line is treated as the
subject of an email and the rest of the text as the body.  The blank
line separating the summary from the body is critical (unless you omit
the body entirely); tools like rebase can get confused if you run the
two together.

Write your commit message in the imperative: &quot;Fix bug&quot; and not &quot;Fixed bug&quot;
or &quot;Fixes bug.&quot;  This convention matches up with commit messages generated
by commands like git merge and git revert.

Further paragraphs come after blank lines.

- Bullet points are okay, too

    - Typically a hyphen or asterisk is used for the bullet, followed by a
      single space, with blank lines in between, but conventions vary here

    - Use a hanging indent
</code></pre><p>[Gita] provide vim mode for Git commit messages, which helps you to comply to these guidelines.</p>
<h4 id="Contributing-a-layer"><a href="#Contributing-a-layer" class="headerlink" title="Contributing a layer"></a>Contributing a layer</h4><p>Please read the layers documentation first.</p>
<p>Layer with no associated configuration will be rejected. For instance a layer with just a package and a hook can be easily replaced by the usage of the variable <code>g:spacevim_custom_plugins</code>.</p>
<h5 id="File-header"><a href="#File-header" class="headerlink" title="File header"></a>File header</h5><p>The file header for vim script should look like the following template:</p>
<pre class=" language-viml"><code class="language-viml">"=============================================================================
" FILENAME --- NAME layer file for SpaceVim
" Copyright (c) 2012-2016 Shidong Wang & Contributors
" Author: YOUR_NAME <YOUR_EMAIL>
" URL: https://spacevim.org
" License: MIT license
"=============================================================================
</code></pre>
<p>You should replace FILENAME by the name of the file (e.g. foo.vim) and NAME by the name of the layer you are creating, don’t forget to replace YOUR_NAME and YOUR_EMAIL also. </p>
<h5 id="Author-of-a-new-layer"><a href="#Author-of-a-new-layer" class="headerlink" title="Author of a new layer"></a>Author of a new layer</h5><p>In the files header, change the default author name (Shidong Wang) to your name.</p>
<p>here is an example for creating a new layer names <code>foo</code>:</p>
<ol>
<li>fork SpaceVim repo</li>
<li>add a layer file <code>autoload/SpaceVim/layers/foo.vim</code> for <code>foo</code> layer.</li>
<li>edit layer file, check out the example below:</li>
</ol>
<pre class=" language-vim"><code class="language-vim"><span class="token comment" spellcheck="true">"=============================================================================</span>
<span class="token comment" spellcheck="true">" foo.vim --- foo Layer file for SpaceVim</span>
<span class="token comment" spellcheck="true">" Copyright (c) 2012-2016 Shidong Wang &amp; Contributors</span>
<span class="token comment" spellcheck="true">" Author: Shidong Wang &lt; wsdjeg at 163.com ></span>
<span class="token comment" spellcheck="true">" URL: https://spacevim.org</span>
<span class="token comment" spellcheck="true">" License: MIT license</span>
<span class="token comment" spellcheck="true">"=============================================================================</span>

<span class="token string">""</span>
<span class="token comment" spellcheck="true">" @section foo, layer-foo</span>
<span class="token comment" spellcheck="true">" @parentsection layers</span>
<span class="token comment" spellcheck="true">" This the doc for this layer:</span>
<span class="token comment" spellcheck="true">"</span>
<span class="token comment" spellcheck="true">" @subsection Mappings</span>
<span class="token comment" spellcheck="true">" ></span>
<span class="token comment" spellcheck="true">"   Mode      Key           Function</span>
<span class="token comment" spellcheck="true">"   -------------------------------------------------------------</span>
<span class="token comment" spellcheck="true">"   normal    &lt;leader>jA    generate accessors</span>
<span class="token comment" spellcheck="true">"   normal    &lt;leader>js    generate setter accessor</span>
<span class="token comment" spellcheck="true">" &lt;</span>
<span class="token comment" spellcheck="true">" @subsection options</span>
<span class="token comment" spellcheck="true">" ></span>
<span class="token comment" spellcheck="true">"   Name              Description                      Default</span>
<span class="token comment" spellcheck="true">"   -------------------------------------------------------------</span>
<span class="token comment" spellcheck="true">"   g:foo_option1     Set option1 for foo layer        1</span>
<span class="token comment" spellcheck="true">"   g:foo_option2     Set option2 for foo layer        2</span>
<span class="token comment" spellcheck="true">"   g:foo_option3     Set option3 for foo layer        3</span>
<span class="token comment" spellcheck="true">" &lt;</span>

<span class="token keyword">function</span><span class="token operator">!</span> SpaceVim#layers#foo#<span class="token function">plugins</span><span class="token punctuation">(</span><span class="token punctuation">)</span> abort
  <span class="token keyword">let</span> plugins <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">call</span> <span class="token function">add</span><span class="token punctuation">(</span>plugins<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'Shougo/foo.vim'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'option'</span> <span class="token punctuation">:</span> <span class="token string">'value'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">call</span> <span class="token function">add</span><span class="token punctuation">(</span>plugins<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'Shougo/foo_test.vim'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'option'</span> <span class="token punctuation">:</span> <span class="token string">'value'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> plugins
<span class="token keyword">endfunction</span>


<span class="token keyword">function</span><span class="token operator">!</span> SpaceVim#layers#foo#<span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span> abort
  <span class="token keyword">let</span> g<span class="token punctuation">:</span>foo_option1 <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>g<span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token string">'foo_option1'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> g<span class="token punctuation">:</span>foo_option2 <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>g<span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token string">'foo_option2'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> g<span class="token punctuation">:</span>foo_option3 <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>g<span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token string">'foo_option3'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
  <span class="token comment" spellcheck="true">" ...</span>
<span class="token keyword">endfunction</span>
</code></pre>
<ol>
<li>send PR to SpaceVim.</li>
</ol>
<h5 id="Contributor-to-an-existing-layer"><a href="#Contributor-to-an-existing-layer" class="headerlink" title="Contributor to an existing layer"></a>Contributor to an existing layer</h5><p>If you are contributing to an already existing layer, you should not modify any header file.</p>
<h4 id="Contributing-a-keybinding"><a href="#Contributing-a-keybinding" class="headerlink" title="Contributing a keybinding"></a>Contributing a keybinding</h4><p>Mappings are an important part of SpaceVim.</p>
<p>First if you want to have some personal mappings, This can be done in your <code>~/.SpaceVim.d/init.vim</code> file.</p>
<p>If you think it worth contributing a new mappings then be sure to read the documentation to find the best mappings, then create a Pull-Request with your changes.</p>
<p>ALWAYS document your new mappings or mappings changes inside the relevant documentation file. It should be the the layer file and the <a href="https://spacevim.org/documentation" target="_blank" rel="external">documentation.md</a>.</p>
<h4 id="Contributing-a-banner"><a href="#Contributing-a-banner" class="headerlink" title="Contributing a banner"></a>Contributing a banner</h4><p>The startup banner is by default the SpaceVim logo but there are also ASCII banners available in the core/banner layer.</p>
<p>If you have some ASCII skills you can submit your artwork!</p>
<p>You are free to choose a reasonable height size but the width size should be around 75 characters.</p>
<h2 id="Build-with-SpaceVim"><a href="#Build-with-SpaceVim" class="headerlink" title="Build with SpaceVim"></a>Build with SpaceVim</h2><p>SpaceVim provide a lot of public <a href="https://spacevim.org/apis" target="_blank" rel="external">APIs</a>, you can create plugins base on this APIs. also you can add a badge to the README.md of your plugin.</p>
<p><img src="https://img.shields.io/badge/build%20with-SpaceVim-ff69b4.svg" alt=""></p>
<p>markdown</p>
<pre class=" language-md"><code class="language-md">[![](https://spacevim.org/img/build-with-SpaceVim.svg)](https://spacevim.org)
</code></pre>
<h2 id="Changelog"><a href="#Changelog" class="headerlink" title="Changelog"></a>Changelog</h2><ul><br>    <br></ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Community]]></title>
      <url>/2017/05/17/community/</url>
      <content type="html"><![CDATA[<h1 id="Community"><a href="#Community" class="headerlink" title="Community"></a>Community</h1><p>Try these SpaceVim hangouts for any questions, problems or comments. </p>
<h2 id="Ask"><a href="#Ask" class="headerlink" title="Ask"></a>Ask</h2><ul>
<li><a href="https://github.com/SpaceVim/SpaceVim/issues" target="_blank" rel="external">issue tracker</a> for issue and feature requests</li>
<li>vi StackExchange for “how to” &amp; configuration questions</li>
<li><a href="https://twitter.com/SpaceVim" target="_blank" rel="external">Twitter</a> for hugs &amp; pithy comments</li>
</ul>
<h2 id="Chat"><a href="#Chat" class="headerlink" title="Chat"></a>Chat</h2><ul>
<li><a href="https://gitter.im/SpaceVim/SpaceVim?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge" target="_blank" rel="external"><img src="https://badges.gitter.im/SpaceVim/SpaceVim.svg" alt="Gitter"></a></li>
<li><a href="https://jq.qq.com/?_wv=1027&amp;k=43DB6SG" target="_blank" rel="external"><img src="https://img.shields.io/badge/QQ群-121056965-blue.svg" alt="QQ"></a></li>
<li><a href="https://www.facebook.com/SpaceVim" target="_blank" rel="external"><img src="https://img.shields.io/badge/FaceBook-SpaceVim-blue.svg" alt="Facebook"></a></li>
</ul>
<h2 id="Discuss"><a href="#Discuss" class="headerlink" title="Discuss"></a>Discuss</h2><ul>
<li><a href="https://groups.google.com/forum/#!forum/spacevim" target="_blank" rel="external">google mailing list</a></li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Home]]></title>
      <url>/2017/05/17/index/</url>
      <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p><a href="https://travis-ci.org/SpaceVim/SpaceVim" target="_blank" rel="external"><img src="https://travis-ci.org/SpaceVim/SpaceVim.svg?branch=dev" alt="Build Status"></a><br><img src="https://img.shields.io/badge/version-0.3.0--dev-FF00CC.svg" alt="Version 0.3.0-dev"><br><a href="https://raw.githubusercontent.com/SpaceVim/SpaceVim/dev/LICENSE" target="_blank" rel="external"><img src="https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square" alt="MIT License"></a><br><a href="https://raw.githubusercontent.com/SpaceVim/SpaceVim/dev/doc/SpaceVim.txt" target="_blank" rel="external"><img src="https://img.shields.io/badge/doc-%3Ah%20SpaceVim-orange.svg?style=flat-square" alt="Doc"></a><br><a href="http://isitmaintained.com/project/SpaceVim/SpaceVim" title="Average time to resolve an issue" target="_blank" rel="external"><img src="http://isitmaintained.com/badge/resolution/SpaceVim/SpaceVim.svg" alt="Average time to resolve an issue"></a><br><a href="http://isitmaintained.com/project/SpaceVim/SpaceVim" title="Percentage of issues still open" target="_blank" rel="external"><img src="http://isitmaintained.com/badge/open/SpaceVim/SpaceVim.svg" alt="Percentage of issues still open"></a></p>
<p>SpaceVim is a community-driven vim distribution that seeks to provide layer feature, especially for neovim. It offers a variety of layers to choose from. to create a suitable vim development environment, you just need to select the required layers.</p>
<p>See the <a href="https://spacevim.org/documentation" target="_blank" rel="external">documentation</a> or <a href="http://spacevim.org/layers/" target="_blank" rel="external">the list of layers</a> for more information. <a href="https://github.com/Gabirel/Hack-SpaceVim" target="_blank" rel="external">Hack-SpaceVim</a> will tell you how to hack SpaceVim.</p>
<p><img src="https://cloud.githubusercontent.com/assets/13142418/25555650/d7d2c07e-2d1e-11e7-975d-646a07b38a62.png" alt="2017-04-29-20 54 49"></p>
<p>If you are new to vim, you should learning about Vim in general, read <a href="https://github.com/mhinz/vim-galore" target="_blank" rel="external">vim-galore</a>.</p>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Linux-Mac"><a href="#Linux-Mac" class="headerlink" title="Linux/Mac"></a>Linux/Mac</h3><p>If you are using linux or mac os, it is recommenced to use this command to install SpaceVim:</p>
<pre class=" language-sh"><code class="language-sh">curl -sLf https://spacevim.org/install.sh | bash
</code></pre>
<p>with this command, SpaceVim will be installed. all the plugins will be install <strong>automatically</strong> when first time run vim/nvim.<br>for more info about the install script, please check:</p>
<pre class=" language-sh"><code class="language-sh">curl -sLf https://spacevim.org/install.sh | bash -s -- -h
</code></pre>
<h3 id="windows-support"><a href="#windows-support" class="headerlink" title="windows support"></a>windows support</h3><ul>
<li>For vim in windows, please just clone this repo as vimfiles in you Home directory.<br>  by default, when open a cmd, the current dir is your Home directory, run this command in cmd.<br>  make sure you have a backup of your own vimfiles.</li>
</ul>
<pre class=" language-sh"><code class="language-sh">git clone https://github.com/SpaceVim/SpaceVim.git vimfiles
</code></pre>
<ul>
<li>For neovim in windows, please clone this repo as <code>AppData\Local\nvim</code> in your home directory.<br>  for more info, please check out <a href="https://github.com/neovim/neovim/wiki/Installing-Neovim" target="_blank" rel="external">neovim’s wiki</a>.<br>  by default, when open a cmd, the current dir is your Home directory, run this command in cmd.</li>
</ul>
<pre class=" language-sh"><code class="language-sh">git clone https://github.com/SpaceVim/SpaceVim.git AppData\Local\nvim
</code></pre>
<h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><h2 id="News"><a href="#News" class="headerlink" title="News"></a>News</h2><p><a href="">Newsletter #1 - A New Hope</a></p>
<blockquote>
<p>   Published on: 2017-5-31 </p>
</blockquote>
<p>More posts are in the <a href="https://spacevim.org/blog/" target="_blank" rel="external">SpaceVim’s Blog</a></p>
<p><a href="https://twitter.com/SpaceVim" target="_blank" rel="external">Follow @SpaceVim</a> </p>
<h2 id="Impressions"><a href="#Impressions" class="headerlink" title="Impressions"></a>Impressions</h2><h2 id="Get-Involved"><a href="#Get-Involved" class="headerlink" title="Get Involved"></a>Get Involved</h2><p>Discuss the project at <a href="https://gitter.im/SpaceVim/SpaceVim" target="_blank" rel="external">gitter.im/SpaceVim</a>, IRC (<strong>#spacevim</strong> on <strong>irc.freenode.net</strong>) or the <a href="https://groups.google.com/forum/#!forum/spacevim" target="_blank" rel="external">mailing list</a>. </p>
<p>Contribute code, report bugs and request features at <a href="https://github.com/SpaceVim/SpaceVim" target="_blank" rel="external">GitHub</a>. </p>
<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><ol>
<li>What is the project status?</li>
</ol>
<p>The current stable version is 0.2.0. See the milestones page for development progress and the roadmap for high-level plans.</p>
<ol>
<li>Is SpaceVim trying to turn Vim/Neovim into an IDE?</li>
</ol>
<p>With layers feature, this <a href="">version</a> of vim distribution to tern vim/neovim into an IDE for many language.</p>
<ol>
<li>Will SpaceVim deprecate Vimscript?</li>
</ol>
<p>No, the custom configration file is written in vim script.</p>
<ol>
<li>Which version of vim/neovim is needed?</li>
</ol>
<p>vim 7.4/neovim v0.1.7 </p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Documentation]]></title>
      <url>/2017/05/17/documentation/</url>
      <content type="html"><![CDATA[<h1 id="SpaceVim-Documentation"><a href="#SpaceVim-Documentation" class="headerlink" title="SpaceVim Documentation"></a>SpaceVim Documentation</h1><!-- vim-markdown-toc GFM -->
<ul>
<li><a href="#core-pillars">Core Pillars</a><ul>
<li><a href="#mnemonic">Mnemonic</a></li>
<li><a href="#discoverable">Discoverable</a></li>
<li><a href="#consistent">Consistent</a></li>
<li><a href="#crowd-configured">Crowd-Configured</a></li>
</ul>
</li>
<li><a href="#highlighted-features">Highlighted features</a></li>
<li><a href="#screenshots">Screenshots</a><ul>
<li><a href="#welcome-page">welcome page</a></li>
<li><a href="#working-flow">working flow</a></li>
</ul>
</li>
<li><a href="#who-can-benefit-from-this">Who can benefit from this?</a></li>
<li><a href="#update-and-rollback">Update and Rollback</a><ul>
<li><a href="#update-spacevim-itself">Update SpaceVim itself</a><ul>
<li><a href="#automatic-updates">Automatic Updates</a></li>
<li><a href="#updating-from-the-spacevim-buffer">Updating from the SpaceVim Buffer</a></li>
<li><a href="#updating-manually-with-git">Updating Manually with git</a></li>
</ul>
</li>
<li><a href="#update-plugins">Update plugins</a></li>
</ul>
</li>
<li><a href="#configuration-layers">Configuration layers</a></li>
<li><a href="#custom-configuration">Custom Configuration</a><ul>
<li><a href="#automatic-generation">Automatic Generation</a></li>
<li><a href="#alternative-directory">Alternative directory</a></li>
</ul>
</li>
<li><a href="#awesome-ui">Awesome ui</a><ul>
<li><a href="#colorschemes">Colorschemes</a></li>
<li><a href="#font">Font</a></li>
<li><a href="#ui-toggles">UI Toggles</a></li>
<li><a href="#statusline--tabline">Statusline &amp;&amp; tabline</a></li>
</ul>
</li>
<li><a href="#manual">Manual</a><ul>
<li><a href="#completion">Completion</a><ul>
<li><a href="#unitedenite">Unite/Denite</a><ul>
<li><a href="#mappings-within-unitedenite-buffer">Mappings within unite/denite buffer</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#discovering">Discovering</a><ul>
<li><a href="#mappings">Mappings</a><ul>
<li><a href="#mappings-guide">Mappings guide</a></li>
<li><a href="#unidedenite-describe-key-bindings">Unide/Denite describe key bindings</a></li>
</ul>
</li>
<li><a href="#getting-help">Getting help</a></li>
<li><a href="#available-layers">Available layers</a><ul>
<li><a href="#available-plugins-in-spacevim">Available plugins in SpaceVim</a></li>
<li><a href="#new-packages-from-elpa-repositories">New packages from ELPA repositories</a></li>
</ul>
</li>
<li><a href="#toggles">Toggles</a></li>
</ul>
</li>
<li><a href="#navigating">Navigating</a></li>
<li><a href="#auto-saving">Auto-saving</a></li>
<li><a href="#searching">Searching</a></li>
<li><a href="#editing">Editing</a><ul>
<li><a href="#multi-encodings">Multi-Encodings</a></li>
</ul>
</li>
<li><a href="#errors-handling">Errors handling</a></li>
</ul>
</li>
<li><a href="#features">Features</a><ul>
<li><a href="#awesome-ui-1">Awesome ui</a></li>
<li><a href="#mnemonic-key-bindings">Mnemonic key bindings</a></li>
</ul>
</li>
<li><a href="#language-specific-mode">Language specific mode</a></li>
<li><a href="#key-mapping">Key Mapping</a><ul>
<li><a href="#cc-support">c/c++ support</a></li>
<li><a href="#go-support">go support</a></li>
<li><a href="#python-support">python support</a></li>
</ul>
</li>
<li><a href="#neovim-centric---dark-powered-mode-of-spacevim">Neovim centric - Dark powered mode of SpaceVim.</a></li>
<li><a href="#modular-configuration">Modular configuration</a></li>
<li><a href="#multiple-leader-mode">Multiple leader mode</a><ul>
<li><a href="#global-origin-vim-leader">Global origin vim leader</a></li>
<li><a href="#local-origin-vim-leader">Local origin vim leader</a></li>
<li><a href="#windows-function-leader">Windows function leader</a></li>
<li><a href="#unite-work-flow-leader">Unite work flow leader</a></li>
</ul>
</li>
<li><a href="#unite-centric-work-flow">Unite centric work-flow</a><pre><code>  * [Plugin Highlights](#plugin-highlights)
  * [Non Lazy-Loaded Plugins](#non-lazy-loaded-plugins)
  * [Lazy-Loaded Plugins](#lazy-loaded-plugins)
      * [Language](#language)
      * [Commands](#commands)
      * [Commands](#commands-1)
      * [Completion](#completion-1)
      * [Unite](#unite)
      * [Operators &amp; Text Objects](#operators--text-objects)
  * [Custom Key bindings](#custom-key-bindings)
      * [File Operations](#file-operations)
      * [Editor UI](#editor-ui)
      * [Window Management](#window-management)
      * [Native functions](#native-functions)
      * [Plugin: Unite](#plugin-unite)
      * [Plugin: VimFiler](#plugin-vimfiler)
      * [Plugin: neocomplete](#plugin-neocomplete)
      * [Plugin: NERD Commenter](#plugin-nerd-commenter)
      * [Plugin: Goyo and Limelight](#plugin-goyo-and-limelight)
      * [Plugin: ChooseWin](#plugin-choosewin)
      * [Plugin: Bookmarks](#plugin-bookmarks)
      * [Plugin: Gita](#plugin-gita)
      * [Plugin: vim-signify](#plugin-vim-signify)
      * [Misc Plugins](#misc-plugins)
</code></pre></li>
</ul>
<!-- vim-markdown-toc -->
<h2 id="Core-Pillars"><a href="#Core-Pillars" class="headerlink" title="Core Pillars"></a>Core Pillars</h2><p>Four core pillars: Mnemonic, Discoverable, Consistent and “Crowd-Configured”.</p>
<p>If any of these core pillars is violated open an issue and we’ll try our best to fix it.</p>
<h3 id="Mnemonic"><a href="#Mnemonic" class="headerlink" title="Mnemonic"></a>Mnemonic</h3><p>Key bindings are organized using mnemonic prefixes like b for buffer, p for project, s for search, h for help, etc…</p>
<h3 id="Discoverable"><a href="#Discoverable" class="headerlink" title="Discoverable"></a>Discoverable</h3><p>Innovative real-time display of available key bindings. Simple query system to quickly find available layers, packages, and more.</p>
<h3 id="Consistent"><a href="#Consistent" class="headerlink" title="Consistent"></a>Consistent</h3><p>Similar functionalities have the same key binding everywhere thanks to a clearly defined set of conventions. Documentation is mandatory for any layer that ships with SpaceVim.</p>
<h3 id="Crowd-Configured"><a href="#Crowd-Configured" class="headerlink" title="Crowd-Configured"></a>Crowd-Configured</h3><p>Community-driven configuration provides curated packages tuned by power users and bugs are fixed quickly.</p>
<h2 id="Highlighted-features"><a href="#Highlighted-features" class="headerlink" title="Highlighted features"></a>Highlighted features</h2><ul>
<li><strong>Great documentation:</strong> access documentation in Vim with<br>  <kbd>:h SpaceVim</kbd>.</li>
<li><strong>Beautiful GUI:</strong> you’ll love the awesome UI and its useful features.</li>
<li><strong>Mnemonic key bindings:</strong> commands have mnemonic prefixes like<br>  <kbd>[Window]</kbd> for all the window and buffer commands or <kbd><a href="https://github.com/Shougo/unite.vim" target="_blank" rel="external">Unite</a></kbd> for the<br>  unite work flow commands.</li>
<li><strong>Lazy load plugins:</strong> Lazy-load 90% of plugins with <a href="https://github.com/Shougo/dein.vim" target="_blank" rel="external">dein.vim</a></li>
<li><strong>Batteries included:</strong> discover hundreds of ready-to-use packages nicely<br>  organised in configuration layers following a set of<br>  <a href="http://spacevim.org/development/" target="_blank" rel="external">conventions</a>.</li>
<li><strong>Neovim centric:</strong> Dark powered mode of SpaceVim</li>
</ul>
<h2 id="Screenshots"><a href="#Screenshots" class="headerlink" title="Screenshots"></a>Screenshots</h2><h3 id="welcome-page"><a href="#welcome-page" class="headerlink" title="welcome page"></a>welcome page</h3><p><img src="https://cloud.githubusercontent.com/assets/13142418/25555650/d7d2c07e-2d1e-11e7-975d-646a07b38a62.png" alt="2017-04-29-20 54 49"></p>
<h3 id="working-flow"><a href="#working-flow" class="headerlink" title="working flow"></a>working flow</h3><p><img src="https://cloud.githubusercontent.com/assets/296716/25455341/6af0b728-2a9d-11e7-9721-d2a694dde1a8.png" alt="screen shot 2017-04-26 at 4 28 07 pm"></p>
<p>Neovim on iTerm2 using the SpaceVim color scheme <em>base16-solarized-dark</em></p>
<p>Depicts a common frontend development scenario with JavaScript (jQuery), SASS, and PHP buffers.</p>
<p>Non-code buffers show a Neovim terminal, a TagBar window, a Vimfiler window and a TernJS definition window.</p>
<p>to get more screenshots, see: <a href="https://github.com/SpaceVim/SpaceVim/issues/415" target="_blank" rel="external">issue #415</a></p>
<h2 id="Who-can-benefit-from-this"><a href="#Who-can-benefit-from-this" class="headerlink" title="Who can benefit from this?"></a>Who can benefit from this?</h2><ul>
<li>the <strong>elementary</strong> vim users.</li>
<li>Vim users pursuing a beautiful appearance.</li>
<li>Vim users wanting to lower the <a href="http://en.wikipedia.org/wiki/Repetitive_strain_injury" target="_blank" rel="external">risk of RSI</a>.</li>
<li>Vim users wanting to learn a different way to edit files.</li>
<li>Vim users wanting a simple but deep configuration system.</li>
</ul>
<h2 id="Update-and-Rollback"><a href="#Update-and-Rollback" class="headerlink" title="Update and Rollback"></a>Update and Rollback</h2><h3 id="Update-SpaceVim-itself"><a href="#Update-SpaceVim-itself" class="headerlink" title="Update SpaceVim itself"></a>Update SpaceVim itself</h3><p>There are several methods of updating the core files of SpaceVim. It is recommended to update the packages first; see the next section.</p>
<h4 id="Automatic-Updates"><a href="#Automatic-Updates" class="headerlink" title="Automatic Updates"></a>Automatic Updates</h4><p>NOTE: By default, this feature is disabled, It will slow down the startup of vim/neovim. If you like this feature, add <code>let g:spacevim_automatic_update = 1</code> to your custom configuration file.</p>
<p>SpaceVim will automatically check for a new version every startup. You must restart Vim after updating.</p>
<h4 id="Updating-from-the-SpaceVim-Buffer"><a href="#Updating-from-the-SpaceVim-Buffer" class="headerlink" title="Updating from the SpaceVim Buffer"></a>Updating from the SpaceVim Buffer</h4><p>Use <code>:SPUpdate SpaceVim</code> in SpaceVim buffer, This command will open a buffer to show the process of updating.</p>
<h4 id="Updating-Manually-with-git"><a href="#Updating-Manually-with-git" class="headerlink" title="Updating Manually with git"></a>Updating Manually with git</h4><p>To update manually close Vim and update the git repository:</p>
<p><code>git -C ~/.SpaceVim pull</code>.</p>
<h3 id="Update-plugins"><a href="#Update-plugins" class="headerlink" title="Update plugins"></a>Update plugins</h3><p>Use <code>:SPUpdate</code> command will update all the plugins and SpaceVim itself. after <code>:SPUpdate</code>, you can assign plugins need to be updated. Use <kbd>Tab</kbd> to complete plugin names after <code>:SPUpdate</code>.</p>
<h2 id="Configuration-layers"><a href="#Configuration-layers" class="headerlink" title="Configuration layers"></a>Configuration layers</h2><p>This section is an overview of layers. A more extensive introduction to writing configuration layers can be found in <a href="http://spacevim.org/layers/" target="_blank" rel="external">SpaceVim’s layers page</a> (recommended reading!).</p>
<h2 id="Custom-Configuration"><a href="#Custom-Configuration" class="headerlink" title="Custom Configuration"></a>Custom Configuration</h2><p>User configuration can be stored in your ~/.SpaceVim.d directory.</p>
<h3 id="Automatic-Generation"><a href="#Automatic-Generation" class="headerlink" title="Automatic Generation"></a>Automatic Generation</h3><p>The very first time SpaceVim starts up, it will ask you several questions and then create the <code>SpaceVim.d/init.vim</code> in your <code>HOME</code> directory.</p>
<h3 id="Alternative-directory"><a href="#Alternative-directory" class="headerlink" title="Alternative directory"></a>Alternative directory</h3><p><code>~/.SpaceVim.d/</code> will be added to <code>&amp;runtimepath</code> of vim. read <kbd>:h rtp</kbd>.</p>
<p>It is also possible to override the location of <code>~/.SpaceVim.d/</code> using the environment variable <code>SPACEVIMDIR</code>. Of course you can also use symlinks to change the location of this directory.</p>
<p>SpaceVim also support local config file for project, the init file is <code>.SpaceVim.d/init.vim</code><br>in the root of your project. <code>.SpaceVim.d/</code> will also be added into runtimepath.</p>
<p>here is an example config file for SpaceVim:</p>
<pre class=" language-vim"><code class="language-vim"><span class="token comment" spellcheck="true">" Here are some basic customizations, please refer to the ~/.SpaceVim.d/init.vim</span>
<span class="token comment" spellcheck="true">" file for all possible options:</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>spacevim_default_indent <span class="token operator">=</span> <span class="token number">3</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>spacevim_max_column     <span class="token operator">=</span> <span class="token number">80</span>

<span class="token comment" spellcheck="true">" Change the default directory where all miscellaneous persistent files go.</span>
<span class="token comment" spellcheck="true">" By default it is ~/.cache/vimfiles.</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>spacevim_plugin_bundle_dir <span class="token operator">=</span> <span class="token string">'~/.cache/vimfiles'</span>

<span class="token comment" spellcheck="true">" set SpaceVim colorscheme</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>spacevim_colorscheme <span class="token operator">=</span> <span class="token string">'jellybeans'</span>

<span class="token comment" spellcheck="true">" Set plugin manager, you want to use, default is dein.vim</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>spacevim_plugin_manager <span class="token operator">=</span> <span class="token string">'dein'</span>  <span class="token comment" spellcheck="true">" neobundle or dein or vim-plug</span>

<span class="token comment" spellcheck="true">" use space as `&lt;Leader>`</span>
<span class="token keyword">let</span> mapleader <span class="token operator">=</span> <span class="token string">"\&lt;space>"</span>

<span class="token comment" spellcheck="true">" Set windows shortcut leader [Window], default is `s`</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>spacevim_windows_leader <span class="token operator">=</span> <span class="token string">'s'</span>

<span class="token comment" spellcheck="true">" Set unite work flow shortcut leader [Unite], default is `f`</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>spacevim_unite_leader <span class="token operator">=</span> <span class="token string">'f'</span>

<span class="token comment" spellcheck="true">" By default, language specific plugins are not loaded. This can be changed</span>
<span class="token comment" spellcheck="true">" with the following, then the plugins for go development will be loaded.</span>
<span class="token keyword">call</span> SpaceVim#layers#<span class="token function">load</span><span class="token punctuation">(</span><span class="token string">'lang#go'</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">" loaded ui layer</span>
<span class="token keyword">call</span> SpaceVim#layers#<span class="token function">load</span><span class="token punctuation">(</span><span class="token string">'ui'</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">" If there is a particular plugin you don't like, you can define this</span>
<span class="token comment" spellcheck="true">" variable to disable them entirely:</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>spacevim_disabled_plugins<span class="token operator">=</span><span class="token punctuation">[</span>
\ <span class="token punctuation">[</span><span class="token string">'junegunn/fzf.vim'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
\ <span class="token punctuation">]</span>

<span class="token comment" spellcheck="true">" If you want to add some custom plugins, use these options:</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>spacevim_custom_plugins <span class="token operator">=</span> <span class="token punctuation">[</span>
\ <span class="token punctuation">[</span><span class="token string">'plasticboy/vim-markdown'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'on_ft'</span> <span class="token punctuation">:</span> <span class="token string">'markdown'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
\ <span class="token punctuation">[</span><span class="token string">'wsdjeg/GitHub.vim'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
\ <span class="token punctuation">]</span>

<span class="token comment" spellcheck="true">" set the guifont</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>spacevim_guifont <span class="token operator">=</span> <span class="token string">'DejaVu\ Sans\ Mono\ for\ Powerline\ 11'</span>
</code></pre>
<p>Comprehensive documentation is available for each layer by <kbd>:h SpaceVim</kbd>.</p>
<h2 id="Awesome-ui"><a href="#Awesome-ui" class="headerlink" title="Awesome ui"></a>Awesome ui</h2><p>SpaceVim has a minimalistic and distraction free UI:</p>
<ul>
<li>custom airline with color feedback according to current check status</li>
<li>custom icon in sign column and error feedbacks for checker.</li>
</ul>
<h3 id="Colorschemes"><a href="#Colorschemes" class="headerlink" title="Colorschemes"></a>Colorschemes</h3><p>The default colorscheme of SpaceVim is <a href="https://github.com/morhetz/gruvbox" target="_blank" rel="external">gruvbox</a>. There are two variants of this colorscheme, a dark one and a light one. Some aspects of these colorscheme can be customized in the custom configuration file, read <kbd>:h gruvbox</kbd>.</p>
<p>It is possible to define your default themes in your <code>~/.SpaceVim.d/init.vim</code> with the variable colorschemes. For instance, to specify <a href="https://github.com/rakr/vim-one" target="_blank" rel="external">vim-one with dark colorscheme</a>:</p>
<pre class=" language-vim"><code class="language-vim"><span class="token keyword">let</span> g<span class="token punctuation">:</span>spacevim_colorscheme <span class="token operator">=</span> <span class="token string">'one'</span>
<span class="token keyword">let</span> g<span class="token punctuation">:</span>spacevim_colorscheme_bg <span class="token operator">=</span> <span class="token string">'dark'</span>
</code></pre>
<table>
<thead>
<tr>
<th>Mappings</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><kbd>SPC T n</kbd></td>
<td>switch to next random colorscheme listed in colorscheme layer.</td>
</tr>
<tr>
<td><kbd>SPC T s</kbd></td>
<td>select a theme using a unite buffer.</td>
</tr>
</tbody>
</table>
<p>all the included colorscheme can be found in <a href="http://spacevim.org/layers/colorscheme/" target="_blank" rel="external">colorscheme layer</a>.</p>
<p><strong>NOTE</strong>:</p>
<p>SpaceVim use true colors by default, so you should make sure your terminal support true colors. for more information see: <a href="https://gist.github.com/XVilka/8346728" target="_blank" rel="external">Colours in terminal</a></p>
<h3 id="Font"><a href="#Font" class="headerlink" title="Font"></a>Font</h3><p>The default font used by SpaceVim is DejaVu Sans Mono for Powerline. It is recommended to install it on your system if you wish to use it.</p>
<p>To change the default font set the variable <code>g:spacevim_guifont</code> in your <code>~/.SpaceVim.d/init.vim</code> file. By default its value is:</p>
<pre class=" language-vim"><code class="language-vim"><span class="token keyword">let</span> g<span class="token punctuation">:</span>spacevim_guifont <span class="token operator">=</span> <span class="token string">'DejaVu\ Sans\ Mono\ for\ Powerline\ 11'</span>
</code></pre>
<p>If the specified font is not found, the fallback one will be used (depends on your system). Also note that changing this value has no effect if you are running Vim/Neovim in terminal.</p>
<h3 id="UI-Toggles"><a href="#UI-Toggles" class="headerlink" title="UI Toggles"></a>UI Toggles</h3><p>Some UI indicators can be toggled on and off (toggles start with t and T):</p>
<table>
<thead>
<tr>
<th>Key Binding</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>SPC t 8</td>
<td>highlight any character past the 80th column</td>
</tr>
<tr>
<td>SPC t f</td>
<td>display the fill column (by default the fill column is set to 80)</td>
</tr>
<tr>
<td>SPC t h h</td>
<td>toggle highlight of the current line</td>
</tr>
<tr>
<td>SPC t h i</td>
<td>toggle highlight indentation levels</td>
</tr>
<tr>
<td>SPC t h c</td>
<td>toggle highlight indentation current column</td>
</tr>
<tr>
<td>SPC t h s</td>
<td>toggle syntax highlighting</td>
</tr>
<tr>
<td>SPC t i</td>
<td>toggle indentation guide at point</td>
</tr>
<tr>
<td>SPC t n</td>
<td>toggle line numbers</td>
</tr>
<tr>
<td>SPC t b</td>
<td>toggle background</td>
</tr>
<tr>
<td>SPC t t</td>
<td>open tabs manager</td>
</tr>
<tr>
<td>SPC T ~</td>
<td>display ~ in the fringe on empty lines</td>
</tr>
<tr>
<td>SPC T F</td>
<td>toggle frame fullscreen</td>
</tr>
<tr>
<td>SPC T f</td>
<td>toggle display of the fringe</td>
</tr>
<tr>
<td>SPC T m</td>
<td>toggle menu bar</td>
</tr>
<tr>
<td>SPC T t</td>
<td>toggle tool bar</td>
</tr>
</tbody>
</table>
<h3 id="Statusline-amp-amp-tabline"><a href="#Statusline-amp-amp-tabline" class="headerlink" title="Statusline &amp;&amp; tabline"></a>Statusline &amp;&amp; tabline</h3><p>The statusline and tabline is a heavily customized <a href="https://github.com/vim-airline/vim-airline" target="_blank" rel="external">airline</a> with the following capabilities:</p>
<ul>
<li>tabline index of each buffer or tab.</li>
<li>vim mode (INSERT/NORMAL etc.)</li>
<li>git info : diff/branch</li>
<li>checker info: numbers of errors and warnings.</li>
<li><p>trailing line number.</p>
<p>  Key Binding | Description<br>  ———– | ———–<br>  <code>SPC [1-9]</code> | jump to the index of tabline.</p>
</li>
</ul>
<h2 id="Manual"><a href="#Manual" class="headerlink" title="Manual"></a>Manual</h2><h3 id="Completion"><a href="#Completion" class="headerlink" title="Completion"></a>Completion</h3><h4 id="Unite-Denite"><a href="#Unite-Denite" class="headerlink" title="Unite/Denite"></a>Unite/Denite</h4><p>please checkout the documentation of unite and denite via <code>:h unite</code> and <code>:h denite</code>.</p>
<h5 id="Mappings-within-unite-denite-buffer"><a href="#Mappings-within-unite-denite-buffer" class="headerlink" title="Mappings within unite/denite buffer"></a>Mappings within unite/denite buffer</h5><table>
<thead>
<tr>
<th>Mappings</th>
<th>Mode</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Ctrl</code>+<code>h/k/l/r</code></td>
<td>Normal</td>
<td>Un-map</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>l</code></td>
<td>Normal</td>
<td>Redraw</td>
</tr>
<tr>
<td><code>Tab</code></td>
<td>Insert</td>
<td>Select next line</td>
</tr>
<tr>
<td><code>Tab</code></td>
<td>Normal</td>
<td>Select actions</td>
</tr>
<tr>
<td><code>Shift</code> + <code>Tab</code></td>
<td>Insert</td>
<td>Select previous line</td>
</tr>
<tr>
<td><code>Space</code></td>
<td>Normal</td>
<td>Toggle mark current candidate, up</td>
</tr>
<tr>
<td><code>Enter</code></td>
<td>Normal</td>
<td>Run default action</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>v</code></td>
<td>Normal</td>
<td>Open in a split</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>s</code></td>
<td>Normal</td>
<td>Open in a vertical split</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>t</code></td>
<td>Normal</td>
<td>Open in a new tab</td>
</tr>
<tr>
<td><code>Ctrl</code> + <code>g</code></td>
<td>Normal</td>
<td>Exit unite</td>
</tr>
<tr>
<td><code>jk</code></td>
<td>Insert</td>
<td>Leave Insert mode</td>
</tr>
<tr>
<td><code>r</code></td>
<td>Normal</td>
<td>Replace (‘search’ profile) or rename</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>z</code></td>
<td>Normal/insert</td>
<td>Toggle transpose window</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>w</code></td>
<td>Insert</td>
<td>Delete backward path</td>
</tr>
</tbody>
</table>
<h3 id="Discovering"><a href="#Discovering" class="headerlink" title="Discovering"></a>Discovering</h3><h4 id="Mappings"><a href="#Mappings" class="headerlink" title="Mappings"></a>Mappings</h4><h5 id="Mappings-guide"><a href="#Mappings-guide" class="headerlink" title="Mappings guide"></a>Mappings guide</h5><p>A guide buffer is displayed each time the prefix key is pressed in normal mode. It lists the available key bindings and their short description.<br>The prefix can be <code>[SPC]</code>, <code>[Window]</code>, <code>[denite]</code>, <code>&lt;leader&gt;</code> and <code>[unite]</code>.</p>
<p>The default key of these prefix is:</p>
<table>
<thead>
<tr>
<th>Prefix name</th>
<th>custom option and default value</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>[SPC]</code></td>
<td>NONE / <code>&lt;Space&gt;</code></td>
<td>default mapping prefix of SpaceVim</td>
</tr>
<tr>
<td><code>[Window]</code></td>
<td><code>g:spacevim_windows_leader</code> / <code>s</code></td>
<td>window mapping prefix of SpaceVim</td>
</tr>
<tr>
<td><code>[denite]</code></td>
<td><code>g:spacevim_denite_leader</code> / <code>F</code></td>
<td>denite mapping prefix of SpaceVim</td>
</tr>
<tr>
<td><code>[unite]</code></td>
<td><code>g:spacevim_unite_leader</code> / <code>f</code></td>
<td>unite mapping prefix of SpaceVim</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code></td>
<td><code>mapleader</code> / <code>\</code></td>
<td>default leader prefix of vim/neovim</td>
</tr>
</tbody>
</table>
<p>By default the guide buffer will be displayed 1000ms after the key has been pressed. You can change the delay by setting <code>&#39;timeoutlen&#39;</code> option to your liking (the value is in milliseconds). </p>
<p>for example, after pressing <code>&lt;Space&gt;</code> in normal mode, you will see :</p>
<p><img src="https://cloud.githubusercontent.com/assets/13142418/25778673/ae8c3168-3337-11e7-8536-ee78d59e5a9c.png" alt="2017-05-07_1365x157"></p>
<p>this guide show you all the available key bindings begin with <code>[SPC]</code>, you can type <code>b</code> for all the buffer mappings, <code>p</code> for project mappings, etc. after pressing <code>&lt;C-h&gt;</code> in guide buffer, you will get paging and help info in the statusline.</p>
<table>
<thead>
<tr>
<th>key</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>u</code></td>
<td>undo pressing</td>
</tr>
<tr>
<td><code>n</code></td>
<td>next page of guide buffer</td>
</tr>
<tr>
<td><code>p</code></td>
<td>previous page of guide buffer</td>
</tr>
</tbody>
</table>
<p>to defined custom SPC mappings, use <code>SpaceVim#custom#SPC()</code>. here is an example:</p>
<pre class=" language-vim"><code class="language-vim"><span class="token keyword">call</span> SpaceVim#custom#<span class="token function">SPC</span><span class="token punctuation">(</span><span class="token string">'nnoremap'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'f'</span><span class="token punctuation">,</span> <span class="token string">'t'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'echom "hello world"'</span><span class="token punctuation">,</span> <span class="token string">'test custom SPC'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre>
<h5 id="Unide-Denite-describe-key-bindings"><a href="#Unide-Denite-describe-key-bindings" class="headerlink" title="Unide/Denite describe key bindings"></a>Unide/Denite describe key bindings</h5><p>It is possible to search for specific key bindings by pressing <code>?</code> in the root of guide buffer.</p>
<p>To narrow the list, just insert the mapping keys or description of what mapping you want, Unite/Denite will fuzzy find the mappings, to find buffer related mappings:</p>
<p><img src="https://cloud.githubusercontent.com/assets/13142418/25779196/2f370b0a-3345-11e7-977c-a2377d23286e.png" alt="2017-05-07_1363x365"></p>
<p>then use <code>&lt;Tab&gt;</code> or <code>&lt;Up&gt;</code> and <code>&lt;Down&gt;</code> to select the mapping, press <code>&lt;Enter&gt;</code> will execute that command.</p>
<h4 id="Getting-help"><a href="#Getting-help" class="headerlink" title="Getting help"></a>Getting help</h4><p>Denite/Unite is powerful tool to  unite all interfaces. it was meant to be like <a href="https://github.com/emacs-helm/helm" target="_blank" rel="external">Helm</a> for Vim. These mappings is for getting help info about functions, variables etc:</p>
<table>
<thead>
<tr>
<th>Mappings</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>SPC h SPC</td>
<td>discover SpaceVim documentation, layers and packages using unite</td>
</tr>
<tr>
<td>SPC h i</td>
<td>get help with the symbol at point</td>
</tr>
<tr>
<td>SPC h k</td>
<td>show top-level bindings with which-key</td>
</tr>
<tr>
<td>SPC h m</td>
<td>search available man pages</td>
</tr>
</tbody>
</table>
<p>Reporting an issue:</p>
<table>
<thead>
<tr>
<th>Mappings</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>SPC h I</td>
<td>Open SpaceVim GitHub issue page with pre-filled information</td>
</tr>
</tbody>
</table>
<h4 id="Available-layers"><a href="#Available-layers" class="headerlink" title="Available layers"></a>Available layers</h4><p>All layers can be easily discovered via <code>:SPLayer -l</code> accessible with <code>SPC h l</code>.</p>
<h5 id="Available-plugins-in-SpaceVim"><a href="#Available-plugins-in-SpaceVim" class="headerlink" title="Available plugins in SpaceVim"></a>Available plugins in SpaceVim</h5><p>All plugins can be easily discovered via <code>&lt;leader&gt; l p</code>.</p>
<h5 id="New-packages-from-ELPA-repositories"><a href="#New-packages-from-ELPA-repositories" class="headerlink" title="New packages from ELPA repositories"></a>New packages from ELPA repositories</h5><h4 id="Toggles"><a href="#Toggles" class="headerlink" title="Toggles"></a>Toggles</h4><h3 id="Navigating"><a href="#Navigating" class="headerlink" title="Navigating"></a>Navigating</h3><h3 id="Auto-saving"><a href="#Auto-saving" class="headerlink" title="Auto-saving"></a>Auto-saving</h3><h3 id="Searching"><a href="#Searching" class="headerlink" title="Searching"></a>Searching</h3><h3 id="Editing"><a href="#Editing" class="headerlink" title="Editing"></a>Editing</h3><h4 id="Multi-Encodings"><a href="#Multi-Encodings" class="headerlink" title="Multi-Encodings"></a>Multi-Encodings</h4><p>SpaceVim use utf-8 as default encoding. there are four options for these case:</p>
<ul>
<li>fileencodings (fencs): ucs-bom,utf-8,default,latin1</li>
<li>fileencoding (fenc): utf-8</li>
<li>encoding (enc): utf-8</li>
<li>termencoding (tenc): utf-8 (only supported in vim)</li>
</ul>
<p>to fix messy display: <code>SPC e a</code> is the mapping for auto detect the file encoding. after detecting file encoding, you can run the command below to fix the encoding:</p>
<pre class=" language-vim"><code class="language-vim"><span class="token keyword">set</span> <span class="token builtin">enc</span><span class="token operator">=</span>utf<span class="token operator">-</span><span class="token number">8</span>
<span class="token keyword">write</span>
</code></pre>
<h3 id="Errors-handling"><a href="#Errors-handling" class="headerlink" title="Errors handling"></a>Errors handling</h3><p>SpaceVim uses <a href="https://github.com/neomake/neomake" target="_blank" rel="external">neomake</a> to gives error feedback on the fly. The checks are only performed at save time by default.</p>
<p>Errors management mappings (start with e):</p>
<table>
<thead>
<tr>
<th>Mappings</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>SPC t s</code></td>
<td>toggle syntax checker</td>
</tr>
<tr>
<td><code>SPC e c</code></td>
<td>clear all errors</td>
</tr>
<tr>
<td><code>SPC e h</code></td>
<td>describe a syntax checker</td>
</tr>
<tr>
<td><code>SPC e l</code></td>
<td>toggle the display of the list of errors/warnings</td>
</tr>
<tr>
<td><code>SPC e n</code></td>
<td>go to the next error</td>
</tr>
<tr>
<td><code>SPC e p</code></td>
<td>go to the previous error</td>
</tr>
<tr>
<td><code>SPC e v</code></td>
<td>verify syntax checker setup (useful to debug 3rd party tools configuration)</td>
</tr>
<tr>
<td><code>SPC e .</code></td>
<td>error transient state</td>
</tr>
</tbody>
</table>
<p>The next/previous error mappings and the error transient state can be used to browse errors from syntax checkers as well as errors from location list buffers, and indeed anything that supports vim’s location list. This includes for example search results that have been saved to a location list buffer.</p>
<p>Custom sign symbol:</p>
<table>
<thead>
<tr>
<th>Symbol</th>
<th>Description</th>
<th>Custom option</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>✖</code></td>
<td>Error</td>
<td><code>g:spacevim_error_symbol</code></td>
</tr>
<tr>
<td><code>➤</code></td>
<td>warning</td>
<td><code>g:spacevim_warning_symbol</code></td>
</tr>
</tbody>
</table>
<h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><h3 id="Awesome-ui-1"><a href="#Awesome-ui-1" class="headerlink" title="Awesome ui"></a>Awesome ui</h3><ul>
<li>outline + filemanager + checker</li>
</ul>
<p><img src="https://cloud.githubusercontent.com/assets/13142418/22506638/84705532-e8bc-11e6-8b72-edbdaf08426b.png" alt="awesome ui"></p>
<h3 id="Mnemonic-key-bindings"><a href="#Mnemonic-key-bindings" class="headerlink" title="Mnemonic key bindings"></a>Mnemonic key bindings</h3><p>Key bindings are organized using mnemonic prefixes like b for buffer, p for project, s for search, h for help, etc…</p>
<p><strong>SPC mapping root</strong> : SPC means <code>&lt;Space&gt;</code> on the keyboard.</p>
<table>
<thead>
<tr>
<th>Key</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><kbd>SPC !</kbd></td>
<td>shell cmd</td>
</tr>
<tr>
<td><kbd>SPC a</kbd></td>
<td>+applications</td>
</tr>
<tr>
<td><kbd>SPC b</kbd></td>
<td>+buffers</td>
</tr>
<tr>
<td><kbd>SPC 1…9</kbd></td>
<td>windows 1…9</td>
</tr>
</tbody>
</table>
<h2 id="Language-specific-mode"><a href="#Language-specific-mode" class="headerlink" title="Language specific mode"></a>Language specific mode</h2><h2 id="Key-Mapping"><a href="#Key-Mapping" class="headerlink" title="Key Mapping"></a>Key Mapping</h2><iframe width="853" height="480" src="https://embed.coggle.it/diagram/WMlKuKS0uwABF2j1/a35e36df1d64e7b4f5fd7f956bf97a16b194cadb92d82d83e25aaf489349b0d8" frameborder="0" allowfullscreen></iframe>

<h3 id="c-c-support"><a href="#c-c-support" class="headerlink" title="c/c++ support"></a>c/c++ support</h3><ol>
<li>code completion: autocompletion and fuzzy match.<br><img src="https://cloud.githubusercontent.com/assets/13142418/22505960/df9068de-e8b8-11e6-943e-d79ceca095f1.png" alt="2017-02-01_1359x720"></li>
<li>syntax check: Asynchronous linting and make framework.<br><img src="https://cloud.githubusercontent.com/assets/13142418/22506340/e28b4782-e8ba-11e6-974b-ca29574dcc1f.png" alt="2017-02-01_1359x722"></li>
</ol>
<h3 id="go-support"><a href="#go-support" class="headerlink" title="go support"></a>go support</h3><ol>
<li>code completion:<br><img src="https://cloud.githubusercontent.com/assets/13142418/22508345/8215c5e4-e8c4-11e6-95ec-f2a6e1e2f4d2.png" alt="2017-02-01_1360x721"></li>
<li>syntax check:<br><img src="https://cloud.githubusercontent.com/assets/13142418/22509944/108b6508-e8cb-11e6-8104-6310a29ae796.png" alt="2017-02-01_1359x720"></li>
</ol>
<h3 id="python-support"><a href="#python-support" class="headerlink" title="python support"></a>python support</h3><ol>
<li>code completion:<br><img src="https://cloud.githubusercontent.com/assets/13142418/22537799/7d1d47fe-e948-11e6-8168-a82e3f688554.png" alt="2017-02-02_1360x724"></li>
<li>syntax check:<br><img src="https://cloud.githubusercontent.com/assets/13142418/22537883/36de7b5e-e949-11e6-866f-73c48e8f59aa.png" alt="2017-02-02_1358x720"></li>
</ol>
<h2 id="Neovim-centric-Dark-powered-mode-of-SpaceVim"><a href="#Neovim-centric-Dark-powered-mode-of-SpaceVim" class="headerlink" title="Neovim centric - Dark powered mode of SpaceVim."></a>Neovim centric - Dark powered mode of SpaceVim.</h2><p>By default, SpaceVim use these dark powered plugins:</p>
<ol>
<li><a href="https://github.com/Shougo/deoplete.nvim" target="_blank" rel="external">deoplete.nvim</a> - Dark powered asynchronous completion framework for neovim</li>
<li><a href="https://github.com/Shougo/dein.vim" target="_blank" rel="external">dein.vim</a> - Dark powered Vim/Neovim plugin manager</li>
</ol>
<p>TODO:</p>
<ol>
<li><a href="https://github.com/Shougo/defx.nvim" target="_blank" rel="external">defx.nvim</a> - Dark powered file explorer</li>
<li><a href="https://github.com/Shougo/deoppet.nvim" target="_blank" rel="external">deoppet.nvim</a> - Dark powered snippet plugin</li>
<li><a href="https://github.com/Shougo/denite.nvim" target="_blank" rel="external">denite.nvim</a> - Dark powered asynchronous unite all interfaces for Neovim/Vim8</li>
</ol>
<h2 id="Modular-configuration"><a href="#Modular-configuration" class="headerlink" title="Modular configuration"></a>Modular configuration</h2><h2 id="Multiple-leader-mode"><a href="#Multiple-leader-mode" class="headerlink" title="Multiple leader mode"></a>Multiple leader mode</h2><h3 id="Global-origin-vim-leader"><a href="#Global-origin-vim-leader" class="headerlink" title="Global origin vim leader"></a>Global origin vim leader</h3><p>Vim’s origin global leader can be used in all modes.</p>
<h3 id="Local-origin-vim-leader"><a href="#Local-origin-vim-leader" class="headerlink" title="Local origin vim leader"></a>Local origin vim leader</h3><p>Vim’s origin local leader can be used in all the mode.</p>
<h3 id="Windows-function-leader"><a href="#Windows-function-leader" class="headerlink" title="Windows function leader"></a>Windows function leader</h3><p>Windows function leader can only be used in normal mode.<br>For the list of mappings see the <a href="#window-management">link</a></p>
<h3 id="Unite-work-flow-leader"><a href="#Unite-work-flow-leader" class="headerlink" title="Unite work flow leader"></a>Unite work flow leader</h3><p>Unite work flow leader can only be used in normal mode. Unite leader need unite groups.</p>
<h2 id="Unite-centric-work-flow"><a href="#Unite-centric-work-flow" class="headerlink" title="Unite centric work-flow"></a>Unite centric work-flow</h2><p><img src="https://cloud.githubusercontent.com/assets/13142418/23955542/26fd5348-09d5-11e7-8253-1f43991439b0.png" alt="unite"></p>
<ul>
<li><p>List all the plugins has been installed, fuzzy find what you want, default action is open the github website of current plugin. default key is <code>&lt;leader&gt;lp</code><br>  <img src="https://cloud.githubusercontent.com/assets/13142418/22175019/ce42d902-e027-11e6-89cd-4f44f70a10cd.png" alt="2017-01-21_1358x725"></p>
</li>
<li><p>List all the mappings and description: <code>f&lt;space&gt;</code><br>  <img src="https://cloud.githubusercontent.com/assets/13142418/22507351/24af0d74-e8c0-11e6-985e-4a1404b629ed.png" alt="2017-02-01_1359x723"></p>
</li>
<li><p>List all the starred repos in github.com, fuzzy find and open the website of the repo. default key is <code>&lt;leader&gt;ls</code><br>  <img src="https://cloud.githubusercontent.com/assets/13142418/22506915/deb99caa-e8bd-11e6-9b80-316281ddb48c.png" alt="2017-02-01_1359x722"></p>
</li>
</ul>
<h4 id="Plugin-Highlights"><a href="#Plugin-Highlights" class="headerlink" title="Plugin Highlights"></a>Plugin Highlights</h4><ul>
<li>Package management with caching enabled and lazy loading</li>
<li>Project-aware tabs and label</li>
<li>Vimfiler as file-manager + SSH connections</li>
<li>Go completion via vim-go and gocode</li>
<li>Javascript completion via Tern</li>
<li>PHP completion, indent, folds, syntax</li>
<li>Python jedi completion, pep8 convention</li>
<li>Languages: Ansible, css3, csv, json, less, markdown, mustache</li>
<li><p>Helpers: Undo tree, bookmarks, git, tmux navigation,<br>  hex editor, sessions, and much more.</p>
<p>  <em>Note</em> that 90% of the plugins are <strong>[lazy-loaded]</strong>.</p>
</li>
</ul>
<pre><code>[lazy-loaded]: ./config/plugins.vim
</code></pre><h4 id="Non-Lazy-Loaded-Plugins"><a href="#Non-Lazy-Loaded-Plugins" class="headerlink" title="Non Lazy-Loaded Plugins"></a>Non Lazy-Loaded Plugins</h4><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/Shougo/dein.vim" target="_blank" rel="external">dein.vim</a></td>
<td>Dark powered Vim/Neovim plugin manager</td>
</tr>
<tr>
<td><a href="https://github.com/Shougo/vimproc.vim" target="_blank" rel="external">vimproc</a></td>
<td>Interactive command execution</td>
</tr>
<tr>
<td><a href="https://github.com/rafi/awesome-vim-colorschemes" target="_blank" rel="external">colorschemes</a></td>
<td>Awesome color-schemes</td>
</tr>
<tr>
<td><a href="https://github.com/bogado/file-line" target="_blank" rel="external">file-line</a></td>
<td>Allow opening a file in a given line</td>
</tr>
<tr>
<td><a href="https://github.com/Shougo/neomru.vim" target="_blank" rel="external">neomru</a></td>
<td>MRU source for Unite</td>
</tr>
<tr>
<td><a href="https://github.com/itchyny/vim-cursorword" target="_blank" rel="external">cursorword</a></td>
<td>Underlines word under cursor</td>
</tr>
<tr>
<td><a href="https://github.com/itchyny/vim-gitbranch" target="_blank" rel="external">gitbranch</a></td>
<td>Lightweight git branch detection</td>
</tr>
<tr>
<td><a href="https://github.com/airblade/vim-gitgutter" target="_blank" rel="external">gitgutter</a></td>
<td>Shows git diffs in the gutter</td>
</tr>
<tr>
<td><a href="https://github.com/rafi/vim-tinyline" target="_blank" rel="external">tinyline</a></td>
<td>Tiny great looking statusline</td>
</tr>
<tr>
<td><a href="https://github.com/rafi/vim-tagabana" target="_blank" rel="external">tagabana</a></td>
<td>Central location for all tags</td>
</tr>
<tr>
<td><a href="https://github.com/MattesGroeger/vim-bookmarks" target="_blank" rel="external">bookmarks</a></td>
<td>Bookmarks, works independently from vim marks</td>
</tr>
<tr>
<td><a href="https://github.com/christoomey/vim-tmux-navigator" target="_blank" rel="external">tmux-navigator</a></td>
<td>Seamless navigation between tmux panes and vim splits</td>
</tr>
</tbody>
</table>
<h4 id="Lazy-Loaded-Plugins"><a href="#Lazy-Loaded-Plugins" class="headerlink" title="Lazy-Loaded Plugins"></a>Lazy-Loaded Plugins</h4><h5 id="Language"><a href="#Language" class="headerlink" title="Language"></a>Language</h5><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/othree/html5.vim" target="_blank" rel="external">html5</a></td>
<td>HTML5 omnicomplete and syntax</td>
</tr>
<tr>
<td><a href="https://github.com/mustache/vim-mustache-handlebars" target="_blank" rel="external">mustache</a></td>
<td>Mustache and handlebars syntax</td>
</tr>
<tr>
<td><a href="https://github.com/rcmdnk/vim-markdown" target="_blank" rel="external">markdown</a></td>
<td>Markdown syntax highlighting</td>
</tr>
<tr>
<td><a href="https://github.com/chase/vim-ansible-yaml" target="_blank" rel="external">ansible-yaml</a></td>
<td>Additional support for Ansible</td>
</tr>
<tr>
<td><a href="https://github.com/mitsuhiko/vim-jinja" target="_blank" rel="external">jinja</a></td>
<td>Jinja support in vim</td>
</tr>
<tr>
<td><a href="https://github.com/groenewege/vim-less" target="_blank" rel="external">less</a></td>
<td>Syntax for LESS</td>
</tr>
<tr>
<td><a href="https://github.com/hail2u/vim-css3-syntax" target="_blank" rel="external">css3-syntax</a></td>
<td>CSS3 syntax support to vim’s built-in <code>syntax/css.vim</code></td>
</tr>
<tr>
<td><a href="https://github.com/chrisbra/csv.vim" target="_blank" rel="external">csv</a></td>
<td>Handling column separated data</td>
</tr>
<tr>
<td><a href="https://github.com/hynek/vim-python-pep8-indent" target="_blank" rel="external">pep8-indent</a></td>
<td>Nicer Python indentation</td>
</tr>
<tr>
<td><a href="https://github.com/robbles/logstash.vim" target="_blank" rel="external">logstash</a></td>
<td>Highlights logstash configuration files</td>
</tr>
<tr>
<td><a href="https://github.com/tmux-plugins/vim-tmux" target="_blank" rel="external">tmux</a></td>
<td>vim plugin for tmux.conf</td>
</tr>
<tr>
<td><a href="https://github.com/elzr/vim-json" target="_blank" rel="external">json</a></td>
<td>Better JSON support</td>
</tr>
<tr>
<td><a href="https://github.com/cespare/vim-toml" target="_blank" rel="external">toml</a></td>
<td>Syntax for TOML</td>
</tr>
<tr>
<td><a href="https://github.com/PotatoesMaster/i3-vim-syntax" target="_blank" rel="external">i3</a></td>
<td>i3 window manager config syntax</td>
</tr>
<tr>
<td><a href="https://github.com/ekalinin/Dockerfile.vim" target="_blank" rel="external">Dockerfile</a></td>
<td>syntax and snippets for Dockerfile</td>
</tr>
<tr>
<td><a href="https://github.com/fatih/vim-go" target="_blank" rel="external">go</a></td>
<td>Go development</td>
</tr>
<tr>
<td><a href="https://github.com/davidhalter/jedi-vim" target="_blank" rel="external">jedi-vim</a></td>
<td>Python jedi autocompletion library</td>
</tr>
<tr>
<td><a href="https://github.com/vim-ruby/vim-ruby" target="_blank" rel="external">ruby</a></td>
<td>Ruby configuration files</td>
</tr>
<tr>
<td><a href="https://github.com/jstrater/mpvim" target="_blank" rel="external">portfile</a></td>
<td>Macports portfile configuration files</td>
</tr>
<tr>
<td><a href="https://github.com/jelera/vim-javascript-syntax" target="_blank" rel="external">javascript</a></td>
<td>Enhanced Javascript syntax</td>
</tr>
<tr>
<td><a href="https://github.com/jiangmiao/simple-javascript-indenter" target="_blank" rel="external">javascript-indent</a></td>
<td>Javascript indent script</td>
</tr>
<tr>
<td><a href="https://github.com/marijnh/tern_for_vim" target="_blank" rel="external">tern</a></td>
<td>Provides Tern-based JavaScript editing support</td>
</tr>
<tr>
<td><a href="https://github.com/StanAngeloff/php.vim" target="_blank" rel="external">php</a></td>
<td>Up-to-date PHP syntax file</td>
</tr>
<tr>
<td><a href="https://github.com/rayburgemeestre/phpfolding.vim" target="_blank" rel="external">phpfold</a></td>
<td>PHP folding</td>
</tr>
<tr>
<td><a href="https://github.com/shawncplus/phpcomplete.vim" target="_blank" rel="external">phpcomplete</a></td>
<td>Improved PHP omnicompletion</td>
</tr>
<tr>
<td><a href="https://github.com/2072/PHP-Indenting-for-VIm" target="_blank" rel="external">phpindent</a></td>
<td>PHP official indenting</td>
</tr>
<tr>
<td><a href="https://github.com/rafi/vim-phpspec" target="_blank" rel="external">phpspec</a></td>
<td>PhpSpec integration</td>
</tr>
</tbody>
</table>
<h5 id="Commands"><a href="#Commands" class="headerlink" title="Commands"></a>Commands</h5><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/Shougo/vimfiler.vim" target="_blank" rel="external">vimfiler</a></td>
<td>Powerful file explorer</td>
</tr>
<tr>
<td>[NERD Commenter]</td>
<td>Comment tool - no comment necessary</td>
</tr>
<tr>
<td><a href="https://github.com/Shougo/vinarise.vim" target="_blank" rel="external">vinarise</a></td>
<td>Hex editor</td>
</tr>
<tr>
<td><a href="https://github.com/scrooloose/syntastic" target="_blank" rel="external">syntastic</a></td>
<td>Syntax checking hacks</td>
</tr>
<tr>
<td><a href="https://github.com/lambdalisue/vim-gita" target="_blank" rel="external">gita</a></td>
<td>An awesome git handling plugin</td>
</tr>
<tr>
<td><a href="https://github.com/lambdalisue/vim-gista" target="_blank" rel="external">gista</a></td>
<td>Manipulate gists in Vim</td>
</tr>
<tr>
<td><a href="https://github.com/mbbill/undotree" target="_blank" rel="external">undotree</a></td>
<td>Ultimate undo history visualizer</td>
</tr>
<tr>
<td><a href="https://github.com/haya14busa/incsearch.vim" target="_blank" rel="external">incsearch</a></td>
<td>Improved incremental searching</td>
</tr>
<tr>
<td><a href="https://github.com/terryma/vim-expand-region" target="_blank" rel="external">expand-region</a></td>
<td>Visually select increasingly larger regions of text</td>
</tr>
<tr>
<td><a href="https://github.com/tyru/open-browser.vim" target="_blank" rel="external">open-browser</a></td>
<td>Open URI with your favorite browser</td>
</tr>
<tr>
<td><a href="https://github.com/thinca/vim-prettyprint" target="_blank" rel="external">prettyprint</a></td>
<td>Pretty-print vim variables</td>
</tr>
<tr>
<td><a href="https://github.com/thinca/vim-quickrun" target="_blank" rel="external">quickrun</a></td>
<td>Run commands quickly</td>
</tr>
<tr>
<td><a href="https://github.com/thinca/vim-ref" target="_blank" rel="external">ref</a></td>
<td>Integrated reference viewer</td>
</tr>
<tr>
<td><a href="https://github.com/itchyny/dictionary.vim" target="_blank" rel="external">dictionary</a></td>
<td>Dictionary.app interface</td>
</tr>
<tr>
<td><a href="https://github.com/vimwiki/vimwiki" target="_blank" rel="external">vimwiki</a></td>
<td>Personal Wiki for Vim</td>
</tr>
<tr>
<td><a href="https://github.com/beloglazov/vim-online-thesaurus" target="_blank" rel="external">thesaurus</a></td>
<td>Look up words in an online thesaurus</td>
</tr>
</tbody>
</table>
<h5 id="Commands-1"><a href="#Commands-1" class="headerlink" title="Commands"></a>Commands</h5><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/junegunn/goyo.vim" target="_blank" rel="external">goyo</a></td>
<td>Distraction-free writing</td>
</tr>
<tr>
<td><a href="https://github.com/junegunn/limelight.vim" target="_blank" rel="external">limelight</a></td>
<td>Hyperfocus-writing</td>
</tr>
<tr>
<td><a href="http://www.vim.org/scripts/script.php?script_id=39" target="_blank" rel="external">matchit</a></td>
<td>Intelligent pair matching</td>
</tr>
<tr>
<td><a href="https://github.com/Yggdroot/indentLine" target="_blank" rel="external">indentline</a></td>
<td>Display vertical indention lines</td>
</tr>
<tr>
<td><a href="https://github.com/t9md/vim-choosewin" target="_blank" rel="external">choosewin</a></td>
<td>Choose window to use, like tmux’s ‘display-pane’</td>
</tr>
</tbody>
</table>
<h5 id="Completion-1"><a href="#Completion-1" class="headerlink" title="Completion"></a>Completion</h5><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/Raimondi/delimitMate" target="_blank" rel="external">delimitmate</a></td>
<td>Insert mode auto-completion for quotes, parenthesis, brackets</td>
</tr>
<tr>
<td><a href="https://github.com/Shougo/echodoc.vim" target="_blank" rel="external">echodoc</a></td>
<td>Print objects’ documentation in echo area</td>
</tr>
<tr>
<td><a href="https://github.com/Shougo/deoplete.nvim" target="_blank" rel="external">deoplete</a></td>
<td>Neovim: Dark powered asynchronous completion framework</td>
</tr>
<tr>
<td><a href="https://github.com/Shougo/neocomplete.vim" target="_blank" rel="external">neocomplete</a></td>
<td>Next generation completion framework</td>
</tr>
<tr>
<td><a href="https://github.com/Shougo/neosnippet.vim" target="_blank" rel="external">neosnippet</a></td>
<td>Contains neocomplete snippets source</td>
</tr>
</tbody>
</table>
<h5 id="Unite"><a href="#Unite" class="headerlink" title="Unite"></a>Unite</h5><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/Shougo/unite.vim" target="_blank" rel="external">unite</a></td>
<td>Unite and create user interfaces</td>
</tr>
<tr>
<td><a href="https://github.com/ujihisa/unite-colorscheme" target="_blank" rel="external">unite-colorscheme</a></td>
<td>Browse colorschemes</td>
</tr>
<tr>
<td><a href="https://github.com/osyo-manga/unite-filetype" target="_blank" rel="external">unite-filetype</a></td>
<td>Select file type</td>
</tr>
<tr>
<td><a href="https://github.com/thinca/vim-unite-history" target="_blank" rel="external">unite-history</a></td>
<td>Browse history of command/search</td>
</tr>
<tr>
<td><a href="https://github.com/Shougo/unite-build" target="_blank" rel="external">unite-build</a></td>
<td>Build with Unite interface</td>
</tr>
<tr>
<td><a href="https://github.com/h1mesuke/unite-outline" target="_blank" rel="external">unite-outline</a></td>
<td>File “outline” source for unite</td>
</tr>
<tr>
<td><a href="https://github.com/tsukkee/unite-tag" target="_blank" rel="external">unite-tag</a></td>
<td>Tags source for Unite</td>
</tr>
<tr>
<td><a href="https://github.com/osyo-manga/unite-quickfix" target="_blank" rel="external">unite-quickfix</a></td>
<td>Quickfix source for Unite</td>
</tr>
<tr>
<td><a href="https://github.com/Shougo/neossh.vim" target="_blank" rel="external">neossh</a></td>
<td>SSH interface for plugins</td>
</tr>
<tr>
<td><a href="https://github.com/joker1007/unite-pull-request" target="_blank" rel="external">unite-pull-request</a></td>
<td>GitHub pull-request source for Unite</td>
</tr>
<tr>
<td><a href="https://github.com/Shougo/junkfile.vim" target="_blank" rel="external">junkfile</a></td>
<td>Create temporary files for memo and testing</td>
</tr>
<tr>
<td><a href="https://github.com/rafi/vim-unite-issue" target="_blank" rel="external">unite-issue</a></td>
<td>Issue manager for JIRA and GitHub</td>
</tr>
</tbody>
</table>
<h5 id="Operators-amp-Text-Objects"><a href="#Operators-amp-Text-Objects" class="headerlink" title="Operators &amp; Text Objects"></a>Operators &amp; Text Objects</h5><table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/kana/vim-operator-user" target="_blank" rel="external">operator-user</a></td>
<td>Define your own operator easily</td>
</tr>
<tr>
<td><a href="https://github.com/kana/vim-operator-replace" target="_blank" rel="external">operator-replace</a></td>
<td>Operator to replace text with register content</td>
</tr>
<tr>
<td><a href="https://github.com/rhysd/vim-operator-surround" target="_blank" rel="external">operator-surround</a></td>
<td>Operator to enclose text objects</td>
</tr>
<tr>
<td><a href="https://github.com/kana/vim-textobj-user" target="_blank" rel="external">textobj-user</a></td>
<td>Create your own text objects</td>
</tr>
<tr>
<td><a href="https://github.com/osyo-manga/vim-textobj-multiblock" target="_blank" rel="external">textobj-multiblock</a></td>
<td>Handle multiple brackets objects</td>
</tr>
</tbody>
</table>
<h4 id="Custom-Key-bindings"><a href="#Custom-Key-bindings" class="headerlink" title="Custom Key bindings"></a>Custom Key bindings</h4><table>
<thead>
<tr>
<th>Key</th>
<th style="text-align:center">Mode</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;leader&gt;</code>+<code>y</code></td>
<td style="text-align:center">visual</td>
<td>Copy selection to X11 clipboard (“+y)</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>c</code></td>
<td style="text-align:center">Normal</td>
<td>Copy full path of current buffer to X11 clipboard</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>Ctrl</code>+<code>c</code></td>
<td style="text-align:center">Normal</td>
<td>Copy github.com url of current buffer to X11 clipboard(if it is a github repo)</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>Ctrl</code>+<code>l</code></td>
<td style="text-align:center">Normal/visual</td>
<td>Copy github.com url of current lines to X11 clipboard(if it is a github repo)</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>p</code></td>
<td style="text-align:center">Normal/visual</td>
<td>Paste selection from X11 clipboard (“+p)</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>f</code></td>
<td style="text-align:center">Normal</td>
<td>Smart page forward (C-f/C-d)</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>b</code></td>
<td style="text-align:center">Normal</td>
<td>Smart page backwards (C-b/C-u)</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>e</code></td>
<td style="text-align:center">Normal</td>
<td>Smart scroll down (3C-e/j)</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>y</code></td>
<td style="text-align:center">Normal</td>
<td>Smart scroll up (3C-y/k)</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>q</code></td>
<td style="text-align:center">Normal</td>
<td><code>Ctrl</code>+<code>w</code></td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>x</code></td>
<td style="text-align:center">Normal</td>
<td>Switch buffer and placement</td>
</tr>
<tr>
<td><code>Up,Down</code></td>
<td style="text-align:center">Normal</td>
<td>Smart up and down</td>
</tr>
<tr>
<td><code>}</code></td>
<td style="text-align:center">Normal</td>
<td>After paragraph motion go to first non-blank char (}^)</td>
</tr>
<tr>
<td><code>&lt;</code></td>
<td style="text-align:center">Visual/Normal</td>
<td>Indent to left and re-select</td>
</tr>
<tr>
<td><code>&gt;</code></td>
<td style="text-align:center">Visual/Normal</td>
<td>Indent to right and re-select</td>
</tr>
<tr>
<td><code>Tab</code></td>
<td style="text-align:center">Visual</td>
<td>Indent to right and re-select</td>
</tr>
<tr>
<td><code>Shift</code>+<code>Tab</code></td>
<td style="text-align:center">Visual</td>
<td>Indent to left and re-select</td>
</tr>
<tr>
<td><code>gp</code></td>
<td style="text-align:center">Normal</td>
<td>Select last paste</td>
</tr>
<tr>
<td><code>Q</code>/<code>gQ</code></td>
<td style="text-align:center">Normal</td>
<td>Disable EX-mode (<nop>)</nop></td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>a</code></td>
<td style="text-align:center">Command</td>
<td>Navigation in command line</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>b</code></td>
<td style="text-align:center">Command</td>
<td>Move cursor backward in command line</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>f</code></td>
<td style="text-align:center">Command</td>
<td>Move cursor forward in command line</td>
</tr>
</tbody>
</table>
<h5 id="File-Operations"><a href="#File-Operations" class="headerlink" title="File Operations"></a>File Operations</h5><table>
<thead>
<tr>
<th>Key</th>
<th style="text-align:center">Mode</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;leader&gt;</code>+<code>cd</code></td>
<td style="text-align:center">Normal</td>
<td>Switch to the directory of the open buffer</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>w</code></td>
<td style="text-align:center">Normal/visual</td>
<td>Write (:w)</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>s</code></td>
<td style="text-align:center">Normal/visual/Command</td>
<td>Write (:w)</td>
</tr>
<tr>
<td><code>:w!!</code></td>
<td style="text-align:center">Command</td>
<td>Write as root (%!sudo tee &gt; /dev/null %)</td>
</tr>
</tbody>
</table>
<h5 id="Editor-UI"><a href="#Editor-UI" class="headerlink" title="Editor UI"></a>Editor UI</h5><table>
<thead>
<tr>
<th>Key</th>
<th style="text-align:center">Mode</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>F2</code></td>
<td style="text-align:center"><em>All</em></td>
<td>Toggle tagbar</td>
</tr>
<tr>
<td><code>F3</code></td>
<td style="text-align:center"><em>All</em></td>
<td>Toggle Vimfiler</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code> + num</td>
<td style="text-align:center">Normal</td>
<td>Jump to the buffer whit the num index</td>
</tr>
<tr>
<td><code>&lt;Alt&gt;</code> + num</td>
<td style="text-align:center">Normal</td>
<td>Jump to the buffer whit the num index, this only works in neovim</td>
</tr>
<tr>
<td><code>&lt;Alt&gt;</code> + <code>h</code>/<code>&lt;Left&gt;</code></td>
<td style="text-align:center">Normal</td>
<td>Jump to left buffer in the tabline, this only works in neovim</td>
</tr>
<tr>
<td><code>&lt;Alt&gt;</code> + <code>l</code>/<code>&lt;Right&gt;</code></td>
<td style="text-align:center">Normal</td>
<td>Jump to Right buffer in the tabline, this only works in neovim</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>ts</code></td>
<td style="text-align:center">Normal</td>
<td>Toggle spell-checker (:setlocal spell!)</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>tn</code></td>
<td style="text-align:center">Normal</td>
<td>Toggle line numbers (:setlocal nonumber!)</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>tl</code></td>
<td style="text-align:center">Normal</td>
<td>Toggle hidden characters (:setlocal nolist!)</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>th</code></td>
<td style="text-align:center">Normal</td>
<td>Toggle highlighted search (:set hlsearch!)</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>tw</code></td>
<td style="text-align:center">Normal</td>
<td>Toggle wrap (:setlocal wrap! breakindent!)</td>
</tr>
<tr>
<td><code>g0</code></td>
<td style="text-align:center">Normal</td>
<td>Go to first tab (:tabfirst)</td>
</tr>
<tr>
<td><code>g$</code></td>
<td style="text-align:center">Normal</td>
<td>Go to last tab (:tablast)</td>
</tr>
<tr>
<td><code>gr</code></td>
<td style="text-align:center">Normal</td>
<td>Go to previous tab (:tabprevious)</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>&lt;Dow&gt;</code></td>
<td style="text-align:center">Normal</td>
<td>Move to split below (<c-w>j)</c-w></td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>&lt;Up&gt;</code></td>
<td style="text-align:center">Normal</td>
<td>Move to upper split (<c-w>k)</c-w></td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>&lt;Left&gt;</code></td>
<td style="text-align:center">Normal</td>
<td>Move to left split (<c-w>h)</c-w></td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>&lt;Right&gt;</code></td>
<td style="text-align:center">Normal</td>
<td>Move to right split (<c-w>l)</c-w></td>
</tr>
<tr>
<td><code>*</code></td>
<td style="text-align:center">Visual</td>
<td>Search selection forwards</td>
</tr>
<tr>
<td><code>#</code></td>
<td style="text-align:center">Visual</td>
<td>Search selection backwards</td>
</tr>
<tr>
<td><code>,</code>+<code>Space</code></td>
<td style="text-align:center">Normal</td>
<td>Remove all spaces at EOL</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>r</code></td>
<td style="text-align:center">Visual</td>
<td>Replace selection</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>lj</code></td>
<td style="text-align:center">Normal</td>
<td>Next on location list</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>lk</code></td>
<td style="text-align:center">Normal</td>
<td>Previous on location list</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>S</code></td>
<td style="text-align:center">Normal/visual</td>
<td>Source selection</td>
</tr>
</tbody>
</table>
<h5 id="Window-Management"><a href="#Window-Management" class="headerlink" title="Window Management"></a>Window Management</h5><table>
<thead>
<tr>
<th>Key</th>
<th style="text-align:center">Mode</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>q</code></td>
<td style="text-align:center">Normal</td>
<td>Smart buffer close</td>
</tr>
<tr>
<td><code>s</code>+<code>p</code></td>
<td style="text-align:center">Normal</td>
<td>Split nicely</td>
</tr>
<tr>
<td><code>s</code>+<code>v</code></td>
<td style="text-align:center">Normal</td>
<td>:split</td>
</tr>
<tr>
<td><code>s</code>+<code>g</code></td>
<td style="text-align:center">Normal</td>
<td>:vsplit</td>
</tr>
<tr>
<td><code>s</code>+<code>t</code></td>
<td style="text-align:center">Normal</td>
<td>Open new tab (:tabnew)</td>
</tr>
<tr>
<td><code>s</code>+<code>o</code></td>
<td style="text-align:center">Normal</td>
<td>Close other windows (:only)</td>
</tr>
<tr>
<td><code>s</code>+<code>x</code></td>
<td style="text-align:center">Normal</td>
<td>Remove buffer, leave blank window</td>
</tr>
<tr>
<td><code>s</code>+<code>q</code></td>
<td style="text-align:center">Normal</td>
<td>Closes current buffer (:close)</td>
</tr>
<tr>
<td><code>s</code>+<code>Q</code></td>
<td style="text-align:center">Normal</td>
<td>Removes current buffer, left buffer in the tabline will be displayed, if there is no buffer on the left, the right buffer will be displayed, if this is the last buffer in the tabline, then an empty buffer will be displayed.</td>
</tr>
<tr>
<td><code>Tab</code></td>
<td style="text-align:center">Normal</td>
<td>Next window or tab</td>
</tr>
<tr>
<td><code>Shift</code>+<code>Tab</code></td>
<td style="text-align:center">Normal</td>
<td>Previous window or tab</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>sv</code></td>
<td style="text-align:center">Normal</td>
<td>Split with previous buffer</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>sg</code></td>
<td style="text-align:center">Normal</td>
<td>Vertical split with previous buffer</td>
</tr>
</tbody>
</table>
<p>SpaceVim has mapped normal <kbd>q</kbd> as smart buffer close, the normal func of <kbd>q</kbd><br>can be get by <kbd><code>&lt;leader&gt;</code> q r</kbd></p>
<h5 id="Native-functions"><a href="#Native-functions" class="headerlink" title="Native functions"></a>Native functions</h5><table>
<thead>
<tr>
<th>Key</th>
<th style="text-align:center">Mode</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;leader&gt;</code> + <code>qr</code></td>
<td style="text-align:center">Normal</td>
<td>Same as native <code>q</code></td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code> + <code>qr/</code></td>
<td style="text-align:center">Normal</td>
<td>Same as native <code>q/</code>, open cmdwin</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code> + <code>qr?</code></td>
<td style="text-align:center">Normal</td>
<td>Same as native <code>q?</code>, open cmdwin</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code> + <code>qr:</code></td>
<td style="text-align:center">Normal</td>
<td>Same as native <code>q:</code>, open cmdwin</td>
</tr>
</tbody>
</table>
<h5 id="Plugin-Unite"><a href="#Plugin-Unite" class="headerlink" title="Plugin: Unite"></a>Plugin: Unite</h5><table>
<thead>
<tr>
<th>Key</th>
<th style="text-align:center">Mode</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>[unite]</code></td>
<td style="text-align:center">Normal</td>
<td>unite leader, default is <code>f</code>, <code>:h g:spacevim_unite_leader</code></td>
</tr>
<tr>
<td><code>[unite]</code>+<code>r</code></td>
<td style="text-align:center">Normal</td>
<td>Resumes Unite window</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>f</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite file recursive search</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>i</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite git file search</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>g</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite grep with ag (the_silver_searcher)</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>u</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite source</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>t</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite tag</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>T</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite tag/include</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>l</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite location list</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>q</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite quick fix</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>e</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite register</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>j</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite jump, change</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>h</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite history/yank</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>s</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite session</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>n</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite session/new</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>o</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite outline</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>c</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite buffer bookmark file in current directory</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>b</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite buffer bookmark file in buffer directory</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>ma</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite mapping</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>&lt;space&gt;</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite menu:CustomKeyMaps</td>
</tr>
<tr>
<td><code>[unite]</code>+<code>me</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite output messages</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>bl</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite buffers, mru, bookmark</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>ta</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite tab</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>ugf</code></td>
<td style="text-align:center">Normal</td>
<td>Opens Unite file with word at cursor</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>ugt</code></td>
<td style="text-align:center">Normal/visual</td>
<td>Opens Unite tag with word at cursor</td>
</tr>
</tbody>
</table>
<h5 id="Plugin-VimFiler"><a href="#Plugin-VimFiler" class="headerlink" title="Plugin: VimFiler"></a>Plugin: VimFiler</h5><table>
<thead>
<tr>
<th>Key</th>
<th style="text-align:center">Mode</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;F3&gt;</code></td>
<td style="text-align:center">Normal</td>
<td>Toggle file explorer</td>
</tr>
<tr>
<td></td>
<td style="text-align:center"><strong>Within <em>VimFiler</em> buffers</strong></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>j</code></td>
<td style="text-align:center">Normal</td>
<td>Un-map</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>l</code></td>
<td style="text-align:center">Normal</td>
<td>Un-map</td>
</tr>
<tr>
<td><code>E</code></td>
<td style="text-align:center">Normal</td>
<td>Un-map</td>
</tr>
<tr>
<td><code>sv</code></td>
<td style="text-align:center">Normal</td>
<td>Split edit</td>
</tr>
<tr>
<td><code>sg</code></td>
<td style="text-align:center">Normal</td>
<td>Vertical split edit</td>
</tr>
<tr>
<td><code>p</code></td>
<td style="text-align:center">Normal</td>
<td>Preview</td>
</tr>
<tr>
<td><code>i</code></td>
<td style="text-align:center">Normal</td>
<td>Switch to directory history</td>
</tr>
<tr>
<td><code>v</code></td>
<td style="text-align:center">Normal</td>
<td>Quick look</td>
</tr>
<tr>
<td><code>gx</code></td>
<td style="text-align:center">Normal</td>
<td>Execute with vimfiler associated</td>
</tr>
<tr>
<td><code>&#39;</code></td>
<td style="text-align:center">Normal</td>
<td>Toggle mark current line</td>
</tr>
<tr>
<td><code>V</code></td>
<td style="text-align:center">Normal</td>
<td>Clear all marks</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>r</code></td>
<td style="text-align:center">Normal</td>
<td>Redraw</td>
</tr>
</tbody>
</table>
<h5 id="Plugin-neocomplete"><a href="#Plugin-neocomplete" class="headerlink" title="Plugin: neocomplete"></a>Plugin: neocomplete</h5><table>
<thead>
<tr>
<th>Key</th>
<th style="text-align:center">Mode</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Enter</code></td>
<td style="text-align:center">Insert</td>
<td>Smart snippet expansion</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>space</code></td>
<td style="text-align:center">Insert</td>
<td>Autocomplete with Unite</td>
</tr>
<tr>
<td><code>Tab</code></td>
<td style="text-align:center">Insert/select</td>
<td>Smart tab movement or completion</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>j/k/f/b</code></td>
<td style="text-align:center">Insert</td>
<td>Movement in popup</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>g</code></td>
<td style="text-align:center">Insert</td>
<td>Undo completion</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>l</code></td>
<td style="text-align:center">Insert</td>
<td>Complete common string</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>o</code></td>
<td style="text-align:center">Insert</td>
<td>Expand snippet</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>y</code></td>
<td style="text-align:center">Insert</td>
<td>Close pop-up</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>e</code></td>
<td style="text-align:center">Insert</td>
<td>Close pop-up</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>l</code></td>
<td style="text-align:center">Insert</td>
<td>Complete common string</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>d</code></td>
<td style="text-align:center">Insert</td>
<td>Scroll down</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>u</code></td>
<td style="text-align:center">Insert</td>
<td>Scroll up</td>
</tr>
</tbody>
</table>
<h5 id="Plugin-NERD-Commenter"><a href="#Plugin-NERD-Commenter" class="headerlink" title="Plugin: NERD Commenter"></a>Plugin: NERD Commenter</h5><table>
<thead>
<tr>
<th>Key</th>
<th style="text-align:center">Mode</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;leader&gt;</code>+<code>cc</code></td>
<td style="text-align:center">Normal/visual</td>
<td>Comment out the current line or text selected in visual mode.</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>cn</code></td>
<td style="text-align:center">Normal/visual</td>
<td>Same as cc but forces nesting.</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>cu</code></td>
<td style="text-align:center">Normal/visual</td>
<td>Uncomments the selected line(s).</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>cs</code></td>
<td style="text-align:center">Normal/visual</td>
<td>Comments out the selected lines with a pretty block formatted layout.</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>cy</code></td>
<td style="text-align:center">Normal/visual</td>
<td>Same as cc except that the commented line(s) are yanked first.</td>
</tr>
</tbody>
</table>
<h5 id="Plugin-Goyo-and-Limelight"><a href="#Plugin-Goyo-and-Limelight" class="headerlink" title="Plugin: Goyo and Limelight"></a>Plugin: Goyo and Limelight</h5><table>
<thead>
<tr>
<th>Key</th>
<th style="text-align:center">Mode</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;leader&gt;</code>+<code>G</code></td>
<td style="text-align:center">Normal</td>
<td>Toggle distraction-free writing</td>
</tr>
</tbody>
</table>
<h5 id="Plugin-ChooseWin"><a href="#Plugin-ChooseWin" class="headerlink" title="Plugin: ChooseWin"></a>Plugin: ChooseWin</h5><table>
<thead>
<tr>
<th>Key</th>
<th style="text-align:center">Mode</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>-</code></td>
<td style="text-align:center">Normal</td>
<td>Choose a window to edit</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>-</code></td>
<td style="text-align:center">Normal</td>
<td>Switch editing window with selected</td>
</tr>
</tbody>
</table>
<h5 id="Plugin-Bookmarks"><a href="#Plugin-Bookmarks" class="headerlink" title="Plugin: Bookmarks"></a>Plugin: Bookmarks</h5><table>
<thead>
<tr>
<th>Key</th>
<th style="text-align:center">Mode</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>m</code>+<code>a</code></td>
<td style="text-align:center">Normal</td>
<td>Show list of all bookmarks</td>
</tr>
<tr>
<td><code>m</code>+<code>m</code></td>
<td style="text-align:center">Normal</td>
<td>Toggle bookmark in current line</td>
</tr>
<tr>
<td><code>m</code>+<code>n</code></td>
<td style="text-align:center">Normal</td>
<td>Jump to next bookmark</td>
</tr>
<tr>
<td><code>m</code>+<code>p</code></td>
<td style="text-align:center">Normal</td>
<td>Jump to previous bookmark</td>
</tr>
<tr>
<td><code>m</code>+<code>i</code></td>
<td style="text-align:center">Normal</td>
<td>Annotate bookmark</td>
</tr>
</tbody>
</table>
<p>As SpaceVim use above bookmarks mappings, so you can not use <code>a</code>, <code>m</code>, <code>n</code>, <code>p</code> or <code>i</code> registers to mark current position, but other registers should works will. if you really need to use these registers, you can add <code>nnoremap &lt;leader&gt;m m</code> to your custom configuration, then you use use <code>a</code> registers via <code>\ma</code></p>
<h5 id="Plugin-Gita"><a href="#Plugin-Gita" class="headerlink" title="Plugin: Gita"></a>Plugin: Gita</h5><table>
<thead>
<tr>
<th>Key</th>
<th style="text-align:center">Mode</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;leader&gt;</code>+<code>gs</code></td>
<td style="text-align:center">Normal</td>
<td>Git status</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>gd</code></td>
<td style="text-align:center">Normal</td>
<td>Git diff</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>gc</code></td>
<td style="text-align:center">Normal</td>
<td>Git commit</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>gb</code></td>
<td style="text-align:center">Normal</td>
<td>Git blame</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>gp</code></td>
<td style="text-align:center">Normal</td>
<td>Git push</td>
</tr>
</tbody>
</table>
<h5 id="Plugin-vim-signify"><a href="#Plugin-vim-signify" class="headerlink" title="Plugin: vim-signify"></a>Plugin: vim-signify</h5><table>
<thead>
<tr>
<th>Key</th>
<th style="text-align:center">Mode</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;leader&gt;</code>+<code>hj</code> / <code>]c</code></td>
<td style="text-align:center">Normal</td>
<td>Jump to next hunk</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>hk</code> / <code>[c</code></td>
<td style="text-align:center">Normal</td>
<td>Jump to previous hunk</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>hJ</code> / <code>]C</code></td>
<td style="text-align:center">Normal</td>
<td>Jump to last hunk</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>hK</code> / <code>[C</code></td>
<td style="text-align:center">Normal</td>
<td>Jump to first hunk</td>
</tr>
</tbody>
</table>
<h5 id="Misc-Plugins"><a href="#Misc-Plugins" class="headerlink" title="Misc Plugins"></a>Misc Plugins</h5><table>
<thead>
<tr>
<th>Key</th>
<th style="text-align:center">Mode</th>
<th>Action</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;leader&gt;</code>+<code>gu</code></td>
<td style="text-align:center">Normal</td>
<td>Open undo tree</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>i</code></td>
<td style="text-align:center">Normal</td>
<td>Toggle indentation lines</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>j</code></td>
<td style="text-align:center">Normal</td>
<td>Start smalls</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>r</code></td>
<td style="text-align:center">Normal</td>
<td>Quickrun</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>?</code></td>
<td style="text-align:center">Normal</td>
<td>Dictionary</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>W</code></td>
<td style="text-align:center">Normal</td>
<td>Wiki</td>
</tr>
<tr>
<td><code>&lt;leader&gt;</code>+<code>K</code></td>
<td style="text-align:center">Normal</td>
<td>Thesaurus</td>
</tr>
</tbody>
</table>
<!-- plublic links -->
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[About]]></title>
      <url>/2017/05/17/about/</url>
      <content type="html"><![CDATA[<h1 id="About-SpaceVim"><a href="#About-SpaceVim" class="headerlink" title="About SpaceVim"></a>About SpaceVim</h1><p><a href="https://github.com/SpaceVim/SpaceVim" target="_blank" rel="external">SpaceVim</a> is a Modular configuration, a bundle of custom settings and plugins for Vim,<br>here we call them layers, each layer has different plugins and config, users just need<br>to select the layers they need. It got inspired by <a href="https://github.com/syl20bnr/spacemacs" target="_blank" rel="external">spacemacs</a>. If you use SpaceVim,<br>please star it on github. It’s a great way of getting feedback and gives me the kick to<br>put more time into development.</p>
<p>If you encounter any bugs or have feature requests, just open an issue<br>report on Github.</p>
<p>For learning about Vim in general, read <a href="https://github.com/mhinz/vim-galore" target="_blank" rel="external">vim-galore</a>.</p>
<h1 id="Credits-amp-Thanks"><a href="#Credits-amp-Thanks" class="headerlink" title="Credits &amp; Thanks"></a>Credits &amp; Thanks</h1><ul>
<li><a href="https://github.com/SpaceVim/SpaceVim/graphs/contributors" target="_blank" rel="external"><img src="https://img.shields.io/github/contributors/SpaceVim/SpaceVim.svg" alt="GitHub contributors"></a></li>
<li><a href="https://github.com/google/vimdoc" target="_blank" rel="external">vimdoc</a> generate doc file for SpaceVim</li>
<li><a href="https://github.com/rafi" target="_blank" rel="external">Rafael Bodill</a> and his vim-config</li>
<li><a href="https://github.com/bling" target="_blank" rel="external">Bailey Ling</a> and his dotvim</li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[学会使用ES6的箭头函数]]></title>
      <url>/2017/05/16/%E5%AD%A6%E4%BC%9A%E4%BD%BF%E7%94%A8ES6%E7%9A%84%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<blockquote>
<p>箭头函数表达式的语法比函数表达式短，并且不绑定自己的 this，arguments，super或 new.target。<br>此外，箭头函数最好在非方法函数中使用，且不能用作构造函数。</p>
</blockquote>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">(</span>param1<span class="token punctuation">,</span> param2<span class="token punctuation">,</span> …<span class="token punctuation">,</span> paramN<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> statements <span class="token punctuation">}</span>
<span class="token punctuation">(</span>param1<span class="token punctuation">,</span> param2<span class="token punctuation">,</span> …<span class="token punctuation">,</span> paramN<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> expression <span class="token comment" spellcheck="true">// 等价于:  => { return expression; } </span>

<span class="token comment" spellcheck="true">// 如果只有一个参数，圆括号是可选的:</span>
<span class="token punctuation">(</span>singleParam<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> statements <span class="token punctuation">}</span>
singleParam <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> statements <span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">// 无参数或者多参数的箭头函数需要使用圆括号或者下划线:</span>
<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> statements <span class="token punctuation">}</span> _ <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> statements <span class="token punctuation">}</span>
</code></pre>
<h4 id="来看看和ES5的对比吧"><a href="#来看看和ES5的对比吧" class="headerlink" title="来看看和ES5的对比吧"></a>来看看和ES5的对比吧</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// ES5</span>
<span class="token keyword">var</span> selected <span class="token operator">=</span> allJobs<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>job<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> job<span class="token punctuation">.</span><span class="token function">isSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// ES6</span>
<span class="token keyword">var</span> selected <span class="token operator">=</span> allJobs<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>job <span class="token operator">=</span><span class="token operator">></span> job<span class="token punctuation">.</span><span class="token function">isSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>这是只有一个参数的情况，如果要写一个接受多重参数（也可能没有参数，或者是不定参数、默认参数、参数解构）的函数，你需要用小括号包裹参数list。</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// ES5</span>
<span class="token keyword">var</span> total <span class="token operator">=</span> values<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// ES6</span>
<span class="token keyword">var</span> total <span class="token operator">=</span> values<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a <span class="token operator">+</span> b<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<h4 id="高级语法"><a href="#高级语法" class="headerlink" title="高级语法"></a>高级语法</h4><p>并且支持 Rest parameters 和 default parameters以及参数列表中的解构赋值</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 支持 Rest parameters 和 default parameters:</span>
<span class="token punctuation">(</span>param1<span class="token punctuation">,</span> param2<span class="token punctuation">,</span> <span class="token operator">...</span>rest<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> statements <span class="token punctuation">}</span>
<span class="token punctuation">(</span>param1 <span class="token operator">=</span> defaultValue1<span class="token punctuation">,</span> param2<span class="token punctuation">,</span> …<span class="token punctuation">,</span> paramN <span class="token operator">=</span> defaultValueN<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> statements <span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">// 支持参数列表中的解构赋值</span>
<span class="token keyword">var</span> f <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>x<span class="token punctuation">:</span> c<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span>x<span class="token punctuation">:</span> a <span class="token operator">+</span> b<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token punctuation">;</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 6</span>
</code></pre>
<p> 只返回一个对象字面量,没有其他语句时, 应当用圆括号将其包起来:</p>
<pre><code>params =&gt; ({foo: bar})
</code></pre><h3 id="使用箭头函数需要注意的地方"><a href="#使用箭头函数需要注意的地方" class="headerlink" title="使用箭头函数需要注意的地方"></a>使用箭头函数需要注意的地方</h3><h4 id="this值"><a href="#this值" class="headerlink" title="this值"></a>this值</h4><blockquote>
<p>普通function函数和箭头函数的行为有一个微妙的区别，箭头函数没有它自己的this值，箭头函数内的this值继承自外围作用域。</p>
</blockquote>
<h5 id="在没有箭头函数的ES5中"><a href="#在没有箭头函数的ES5中" class="headerlink" title="在没有箭头函数的ES5中"></a>在没有箭头函数的ES5中</h5><p>首先看这段代码：</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">// 构造函数 Person() 定义的 `this` 就是新实例对象自己</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">growUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// 在非严格模式下，growUp() 函数定义了其内部的 `this`为全局对象, </span>
      <span class="token function">不同于构造函数Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span>的定义的 <span class="token template-string"><span class="token string">`this`</span></span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">++</span><span class="token punctuation">;</span> 
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>在 ES5 中，通常把this的值赋给一个变量，然后将该变量放到闭包中来解决：</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 也有人选择使用 `that` 而非 `self`. </span>
                   <span class="token comment" spellcheck="true">// 只要保证一致就好.</span>
  self<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">growUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// 回调里面的 `self` 变量就指向了期望的那个对象了</span>
    self<span class="token punctuation">.</span>age<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<p>当然，还可以使用 bind ，把期望的 this 值传递给函数。</p>
<h5 id="在ES6中"><a href="#在ES6中" class="headerlink" title="在ES6中"></a>在ES6中</h5><p>箭头函数会在外围作用域获得this 值，因此下面的代码就完成了这个问题。</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// this正确地指向了person对象</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<blockquote>
<p>考虑到 this 是词法层面上的，严格模式中与 this 相关的规则都将被忽略。</p>
</blockquote>
<h5 id="箭头函数和call-与apply"><a href="#箭头函数和call-与apply" class="headerlink" title="箭头函数和call()与apply()"></a>箭头函数和call()与apply()</h5><p>看看下面的程序会输出什么样的结果：</p>
<pre class=" language-javascript"><code class="language-javascript">  <span class="token keyword">var</span> adder <span class="token operator">=</span> <span class="token punctuation">{</span>
        base <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>

        add <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> f <span class="token operator">=</span> v <span class="token operator">=</span><span class="token operator">></span> v <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>base<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>

        addThruCall<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> f <span class="token operator">=</span> v <span class="token operator">=</span><span class="token operator">></span> v <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>base<span class="token punctuation">;</span>
            <span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>
                base <span class="token punctuation">:</span> <span class="token number">2</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> f<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>

        addAnotherCall<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token keyword">var</span> f <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token keyword">return</span> v <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>base<span class="token punctuation">;</span>
             <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>
                base <span class="token punctuation">:</span> <span class="token number">2</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> f<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>adder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>adder<span class="token punctuation">.</span><span class="token function">addThruCall</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>adder<span class="token punctuation">.</span><span class="token function">addAnotherCall</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>由于 this 已经在词法层面完成了绑定，通过 call() 或 apply() 方法调用一个函数时，只是传入了参数而已，对 this 并没有什么影响，所以会输出如下结果：</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token number">2</span>
<span class="token number">2</span>
<span class="token number">3</span>
</code></pre>
<h4 id="不支持arguments对象"><a href="#不支持arguments对象" class="headerlink" title="不支持arguments对象"></a>不支持arguments对象</h4><p>箭头函数不会在其内部暴露出arguments ：arguments.length, arguments[0], arguments[1] 等等，都不会指向箭头函数的 arguments，而是指向了箭头函数所在作用域的一个名为 arguments 的值，当然是如果有的情况，否则，就是 undefined。</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> arguments <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> arguments<span class="token punctuation">;</span>

<span class="token function">arr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 40 </span>

<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> f <span class="token operator">=</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span>i<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// foo函数的间接参数绑定</span>
  <span class="token keyword">return</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 3</span>
</code></pre>
<p>不过rest参数可以给出一个解决方案：</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
  <span class="token keyword">var</span> f <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
  <span class="token keyword">return</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>

<span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 2</span>
</code></pre>
<h4 id="不能像方法一样使用箭头函数"><a href="#不能像方法一样使用箭头函数" class="headerlink" title="不能像方法一样使用箭头函数"></a>不能像方法一样使用箭头函数</h4><p>箭头函数表达式对非方法函数是最合适的，然而不能把它们作为方法：</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  i<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  b<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  c<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
obj<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// undefined，Window</span>
obj<span class="token punctuation">.</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 10, Object</span>
<span class="token comment" spellcheck="true">//箭头函数中的this指向了Window</span>
</code></pre>
<h4 id="不能使用-new-操作符"><a href="#不能使用-new-操作符" class="headerlink" title="不能使用 new 操作符"></a>不能使用 new 操作符</h4><p>箭头函数不能才当成构造函数，因为和 new 一起用就会抛出错误</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> Foo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// TypeError: Foo is not a constructor</span>
</code></pre>
<h4 id="无原型属性"><a href="#无原型属性" class="headerlink" title="无原型属性"></a>无原型属性</h4><p>箭头函数没有原型属性。</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> Foo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Foo<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// undefined</span>
</code></pre>
<h4 id="返回文字表达式"><a href="#返回文字表达式" class="headerlink" title="返回文字表达式"></a>返回文字表达式</h4><p>用 params =&gt; {object:literal} 这种简单的语法返回一个文字表达式是不行的：</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> func <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  foo<span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// undefined!</span>

<span class="token keyword">var</span> func <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  foo<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// SyntaxError: function statement requires a name（未定义函数语句）</span>

<span class="token comment" spellcheck="true">// 所以，记得用圆括号把文字表达式包起来：</span>
<span class="token keyword">var</span> func <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> foo<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions" target="_blank" rel="external">参考文档</a></p>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> js </tag>
            
            <tag> ES6 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JavaScript重点总结(不定期更新)]]></title>
      <url>/2017/04/27/JavaScript%E9%87%8D%E7%82%B9%E6%80%BB%E7%BB%93-%E4%B8%8D%E5%AE%9A%E6%9C%9F%E6%9B%B4%E6%96%B0/</url>
      <content type="html"><![CDATA[<h4 id="Javascript-Hoisting：变量提升"><a href="#Javascript-Hoisting：变量提升" class="headerlink" title="Javascript Hoisting：变量提升"></a>Javascript Hoisting：变量提升</h4><blockquote>
<p><a href="http://www.cnblogs.com/isaboy/p/javascript_hoisting.html" target="_blank" rel="external">相关资料-1</a></p>
</blockquote>
<h4 id="函数声明和函数表达式的区别"><a href="#函数声明和函数表达式的区别" class="headerlink" title="函数声明和函数表达式的区别"></a>函数声明和函数表达式的区别</h4><blockquote>
<p><a href="http://www.cnblogs.com/isaboy/p/javascript_function.html" target="_blank" rel="external">相关资料-1</a></p>
</blockquote>
<a id="more"></a>
<h4 id="javascript-closure-：闭包"><a href="#javascript-closure-：闭包" class="headerlink" title="javascript closure ：闭包"></a>javascript closure ：闭包</h4><blockquote>
<p><a href="http://www.cnblogs.com/isaboy/p/javascript_closure.html" target="_blank" rel="external">相关资料-1</a><br><a href="https://www.h5jun.com/post/master-the-javascript-interview-what-is-a-closure.html" target="_blank" rel="external">相关资料-2</a></p>
</blockquote>
<h4 id="this指针"><a href="#this指针" class="headerlink" title="this指针"></a>this指针</h4><blockquote>
<p><a href="https://www.moumaobuchiyu.com/2017/03/22/JS%E4%B8%ADthis%E7%9A%84%E6%8C%87%E5%90%91/">相关资料-1</a><br><a href="http://www.cnblogs.com/isaboy/p/javascript_this.html" target="_blank" rel="external">相关资料-2</a></p>
</blockquote>
<h4 id="ES6—Promise"><a href="#ES6—Promise" class="headerlink" title="ES6—Promise"></a>ES6—Promise</h4><blockquote>
<p><a href="https://www.moumaobuchiyu.com/2017/03/28/%E5%85%B3%E4%BA%8EPromise/">相关资料-1</a></p>
</blockquote>
<h4 id="call-amp-apply-amp-bind"><a href="#call-amp-apply-amp-bind" class="headerlink" title="call() &amp; apply() &amp; bind()"></a>call() &amp; apply() &amp; bind()</h4><blockquote>
<p><a href="http://www.cnblogs.com/52fhy/p/5118877.html" target="_blank" rel="external">相关资料-1</a><br><a href="http://www.cnblogs.com/huyong/p/4139875.html" target="_blank" rel="external">相关资料-2</a></p>
</blockquote>
<h4 id="prototype属性"><a href="#prototype属性" class="headerlink" title="prototype属性"></a>prototype属性</h4><blockquote>
<p><a href="http://www.cnblogs.com/yjf512/archive/2011/06/03/2071914.html" target="_blank" rel="external">相关资料-1</a></p>
</blockquote>
<h4 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h4><blockquote>
<p><a href="http://mao.li/javascript/javascript-callback-function/" target="_blank" rel="external">相关资料-1</a><br><a href="http://www.cnblogs.com/moltboy/archive/2013/04/24/3040213.html" target="_blank" rel="external">相关资料-2</a><br><a href="https://www.moumaobuchiyu.com/2017/03/24/JS中的回调函数/">相关资料-3</a></p>
</blockquote>
<h4 id="函数防抖与节流"><a href="#函数防抖与节流" class="headerlink" title="函数防抖与节流"></a>函数防抖与节流</h4><blockquote>
<p><a href="http://blog.csdn.net/jinboker/article/details/52127612" target="_blank" rel="external">相关资料-1</a><br><a href="http://blog.csdn.net/charlene0824/article/details/52080181" target="_blank" rel="external">相关资料-2</a><br><a href="https://segmentfault.com/a/1190000006722279" target="_blank" rel="external">相关资料-3</a><br><a href="https://segmentfault.com/a/1190000006732819" target="_blank" rel="external">相关资料-4</a><br><a href="https://segmentfault.com/a/1190000008275548" target="_blank" rel="external">相关资料-5</a></p>
</blockquote>
<h4 id="优雅降级和渐进增强"><a href="#优雅降级和渐进增强" class="headerlink" title="优雅降级和渐进增强"></a>优雅降级和渐进增强</h4><blockquote>
<p><a href="http://www.cnblogs.com/mofish/p/3822879.html" target="_blank" rel="external">相关资料-1</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> js </tag>
            
            <tag> js基础 </tag>
            
            <tag> js难点总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在服务器上搭建hexo博客]]></title>
      <url>/2017/04/21/%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<blockquote>
<p>随着<a href="https://github.com/moumao/hexo-theme-Vateral" target="_blank" rel="external">Vateral主题</a>的开发接近了尾声，在对主题速度优化的时候发现之前用的githubpage问题多多：首先就是因为在国内的原因，访问速度本身就很慢，曾经有次加载一张16kb的图标时间耗费了26s！！？<a id="more"></a>其次，在对资源做CDN托管加速时，域名是需要备案的，显然githubpage也是做不了的；所以果断舍弃了这个把hexo搭建到了我的阿里云服务器上</p>
</blockquote>
<p>总体来说还是比把hexo搭建到github上要复杂一些的，期间遇到了不少坑，也参考了很多资料，这里详细的总结一下具体的步骤。</p>
<h3 id="hexo的架构"><a href="#hexo的架构" class="headerlink" title="hexo的架构"></a>hexo的架构</h3><hr>
<p><img src="https://segmentfault.com/img/remote/1460000005723405" alt="hexo的架构"></p>
<p>首先我们要理解hexo是如何实现静态博客通过服务器访问的</p>
<blockquote>
<p>通过上图我们可以知道，整个流程就是在本地通过<code>hexo g</code> 渲染博客的静态文件，然后通过<code>hexo d</code> 把静态文件 push到服务器上我们自己创建的git仓库,服务器再通过 git-hooks 同步网站根目录，这样就可以访问了</p>
</blockquote>
<h3 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h3><hr>
<p><strong>第一步：</strong> 安装node.js以及本地Hexo初始化<br><strong>第二步：</strong> 服务器环境搭建，包括安装 Git 、Nginx配置 、创建 git 用户<br><strong>第三步：</strong> 使用Git自动化部署发布博客</p>
<h3 id="本地环境"><a href="#本地环境" class="headerlink" title="本地环境"></a>本地环境</h3><hr>
<h4 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h4><pre><code>$ brew install node
</code></pre><h4 id="初始化Hexo博客"><a href="#初始化Hexo博客" class="headerlink" title="初始化Hexo博客"></a>初始化Hexo博客</h4><p>首先安装 hexo-cli</p>
<pre><code>npm install -g hexo-cli
</code></pre><p>然后创建 你的Hexo目录，然后进入到这个目录</p>
<pre><code>$ mkdir &quot;your hexo dir name&quot;//创建一个自定义的hexo目录，比如我就在用户根目录创建了一个myhexo文件夹（macOS)
$ cd &quot;your hexo dir name&quot;//进入到刚刚创建的目录
//如果是win用户，右键打开git
</code></pre><p>初始化该文件夹</p>
<pre><code>hexo init
</code></pre><p>到这里hexo的本地搭建已经基本结束了，快来新建一个文章并在本地启动吧~</p>
<h4 id="生成自己的第一篇文章"><a href="#生成自己的第一篇文章" class="headerlink" title="生成自己的第一篇文章"></a>生成自己的第一篇文章</h4><p>使用 hexo new &lt;文章名称&gt; 来新建文章，该命令会成成一个 .md文件放置在 sources/_posts文件夹。（<strong>*在hexo目录下执行命令</strong>）</p>
<pre><code>hexo new &quot;hello Hexo&quot;
</code></pre><blockquote>
<p>执行该命令后在hexo目录下的 sources/_posts文件夹里生成了刚刚创建的hello<br>Hexo.md的markdown文件，然后就可以通过本地或者在线的markdown编辑器就可以创作自己的博客了~</p>
</blockquote>
<p>编辑完毕以后， 使用hexo g将 .md文件渲染成静态文件，然后启动hexo-server</p>
<pre><code>hexo g
hexo server
</code></pre><p>打开 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 如果看到 hexo 的初始页面证明安装成功。</p>
<h4 id="生成ssh公钥密钥"><a href="#生成ssh公钥密钥" class="headerlink" title="生成ssh公钥密钥"></a>生成ssh公钥密钥</h4><pre><code>$ cd ~/.ssh
$ ssh-keygen
</code></pre><p>它先要求你确认保存公钥的位置（.ssh/id_rsa），然后它会让你重复一个密码两次，如果不想在使用公钥的时候输入密码，可以留空；具体生产方法可以<a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/" target="_blank" rel="external">参考这里</a></p>
<blockquote>
<p>这个公钥将会复制到服务器的证书中，添加公钥之后可以防止每次 push 都输入密码。</p>
</blockquote>
<p>至此，本地环境的搭建已经基本结束。</p>
<h3 id="服务器环境搭建"><a href="#服务器环境搭建" class="headerlink" title="服务器环境搭建"></a>服务器环境搭建</h3><hr>
<h4 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h4><p>因为我们是拿nginx做 Web 服务器，所以我们需要安装部署好nginx，如果没有安装，推荐使用<a href="https://lnmp.org/install.html" target="_blank" rel="external">LNMP一键安装包</a></p>
<blockquote>
<p>我们可以专门为hexo创建一个部署目录，比如我创建了/home/www/hexo文件夹，并把nginx的配置文件nginx.conf中的部署目录改为/home/www/hexo，配置文件一般在/usr/local/nginx/conf里；同样可以使用默认目录，nginx的默认目录为/var/www/html，如果使用LNMP一键安装包，则默认的部署目录为/home/wwwroot/default</p>
</blockquote>
<h4 id="安装node-js-1"><a href="#安装node-js-1" class="headerlink" title="安装node.js"></a>安装node.js</h4><pre><code>$ curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -
$ apt-get install -y nodejs
</code></pre><blockquote>
<p>如果遇到问题可以参考<a href="https://www.moumaobuchiyu.com/2017/03/16/nodejs%E9%83%A8%E7%BD%B2%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E5%85%A8%E8%BF%87%E7%A8%8B/">Node.js部署到阿里云服务器</a>里边有更详细的关于node.js的步骤</p>
</blockquote>
<h4 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h4><pre><code>$ apt-get install git
</code></pre><h4 id="创建一个git用户"><a href="#创建一个git用户" class="headerlink" title="创建一个git用户"></a>创建一个git用户</h4><pre><code>$ sudo adduser git
</code></pre><blockquote>
<p>虽说现在的仓库只有我们自己在使用，新建一个 git 用户显得不是很有必要，但是为了安全起见，还是建议使用单独的 git 用户来专门运行<br>git 服务</p>
</blockquote>
<h4 id="添加证书登录"><a href="#添加证书登录" class="headerlink" title="添加证书登录"></a>添加证书登录</h4><p>把刚在在本地创建或者已经拥有的公钥，也就是 ~/.ssh/id_rsa.pub 文件里的内容添加到服务器的 /home/git/.ssh/authorized_keys 文件中，如上所说，添加公钥之后可以防止每次 push 都输入密码。（*可以直接执行<code>cat ~/.ssh/id_rsa.pub | pbcopy</code> 复制）</p>
<p>###初始化 Git 仓库<br>可以将git仓库放到自定义位置，我是将其放在 /var/repo/blog.git 目录下的</p>
<pre><code>$ sudo mkdir /var/repo
$ cd /var/repo
$ sudo git init --bare blog.git
</code></pre><p>使用 –bare 参数，Git 就会创建一个裸仓库，裸仓库没有工作区，我们不会在裸仓库上进行操作，它只为共享而存在。</p>
<h4 id="配置-git-hooks"><a href="#配置-git-hooks" class="headerlink" title="配置 git hooks"></a>配置 git hooks</h4><blockquote>
<p>我们这里要使用的是 post-receive 的 hook，这个 hook 会在整个 git 操作过程完结以后被运行，关于 hooks<br>的详情内容可以<a href="https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90" target="_blank" rel="external">参考这里</a>。</p>
</blockquote>
<p>在 blog.git/hooks 目录下新建一个 post-receive 文件</p>
<pre><code>$ cd /var/repo/blog.git/hooks
</code></pre><p>编辑这个文件</p>
<pre><code>$ vim post-receive
</code></pre><p>在 post-receive 文件中写入如下内容</p>
<pre><code>#!/bin/sh
git --work-tree=/home/www/hexo --git-dir=/var/repo/blog.git checkout -f
</code></pre><blockquote>
<p>注意，/home/www/hexo 要换成你自己的部署目录，正如上文所说，我是的配置目录是/home/www/hexo。/var/repo/blog.git是git仓库的位置。上面那句 git 命令可以在我们每次 push 完之后，把部署目录更新到博客的最新生成状态。这样便可以完成达到自动部署的目的了。</p>
</blockquote>
<p>设置这个文件的可执行权限</p>
<pre><code>chmod +x post-receive
</code></pre><h4 id="改变-blog-git-目录的拥有者为-git-用户"><a href="#改变-blog-git-目录的拥有者为-git-用户" class="headerlink" title="改变 blog.git 目录的拥有者为 git 用户"></a>改变 blog.git 目录的拥有者为 git 用户</h4><pre><code>$ sudo chown -R git:git blog.git
</code></pre><h4 id="禁用-git-用户的-shell-登录权限"><a href="#禁用-git-用户的-shell-登录权限" class="headerlink" title="禁用 git 用户的 shell 登录权限"></a>禁用 git 用户的 shell 登录权限</h4><p>出于安全考虑，我们要让 git 用户不能通过 shell 登录。可以编辑 /etc/passwd 来实现</p>
<pre><code>vim /etc/passwd
</code></pre><p>将</p>
<pre><code>git:x:1001:1001:,,,:/home/git:/bin/bash
</code></pre><p>改成</p>
<pre><code>git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell
</code></pre><p>这样 git 用户可以通过 ssh 正常使用 git，但是无法登录 sehll。</p>
<p>至此，服务器环境的搭建已经基本结束。</p>
<h3 id="配置本地-config-yml文件-完成自动化部署"><a href="#配置本地-config-yml文件-完成自动化部署" class="headerlink" title="配置本地_config.yml文件,完成自动化部署"></a>配置本地_config.yml文件,完成自动化部署</h3><hr>
<h4 id="现在配置-hexo-的-deploy。"><a href="#现在配置-hexo-的-deploy。" class="headerlink" title="现在配置 hexo 的 deploy。"></a>现在配置 hexo 的 deploy。</h4><p>修改 hexo 目录下的 _config.yml 找到 deploy, 修改为：</p>
<pre><code>deploy:
type: git
repo: git@www.moumaobuchiyu.com:/var/repo/blog.git
branch: master
</code></pre><blockquote>
<p>repo 的地址为你自己的地址以及 git 仓库目录</p>
</blockquote>
<p>至此，我们的 hexo 自动部署已经全部配置好了</p>
<h4 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h4><p>新建文章：</p>
<pre><code>$ hexo new &quot;post name&quot;
</code></pre><p>生成 &amp; 部署：</p>
<pre><code>$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d
</code></pre><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.viosey.com/2016/10/05/Install-hexo-vps-git/" target="_blank" rel="external">在 VPS 上搭建 Hexo 博客，使用 Git 部署</a><br><a href="https://segmentfault.com/a/1190000005723321" target="_blank" rel="external">阿里云VPS搭建自己的的Hexo博客</a><br><a href="http://www.swiftyper.com/2016/04/17/deploy-hexo-with-git-hook/" target="_blank" rel="external">使用 Git Hook 自动部署 Hexo 到个人 VPS</a><br><a href="http://sumyblog.me/2015/11/02/use-git-hooks-for-hexo-automatic-deployment/" target="_blank" rel="external">使用git hooks进行hexo博客自动化部署</a></p>
]]></content>
      
        <categories>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[大学算是毕业了]]></title>
      <url>/2017/04/18/%E5%A4%A7%E5%AD%A6%E7%AE%97%E6%98%AF%E6%AF%95%E4%B8%9A%E4%BA%86/</url>
      <content type="html"><![CDATA[<p>上了两年多大学，现在算是基本毕业了吧<br>现在被学校忽悠到什么杰普软件公司培训几个月<br>还是培训JavaEE。。。。<br>折腾了几天才安顿到苏州附近的昆山<br>到这里的两天更新了友链和摄影界面</p>
<p>这里的环境不错，适合跑步</p>
]]></content>
      
        <categories>
            
            <category> 日常 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 杰普 </tag>
            
            <tag> 浦东软件园 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[历经半个月 终于用上了自己开发的hexo主题]]></title>
      <url>/2017/04/11/%E5%8E%86%E7%BB%8F%E5%8D%8A%E4%B8%AA%E6%9C%88-%E7%BB%88%E4%BA%8E%E7%94%A8%E4%B8%8A%E4%BA%86%E8%87%AA%E5%B7%B1%E5%BC%80%E5%8F%91%E7%9A%84hexo%E4%B8%BB%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>填了半个月的坑，终于用上了自己开发的hexo主题–vateral<br>在这之间接触hexo这个框架不到一周的时间，并且使用了vio喵的material主题<br>很喜欢这个主题的风格，也就有了开发自己主题的打算<br>这也是为什么vateral中在样式上会有些material的影子<br>熬了几次夜，终于这个主题实现了一些基本的功能，其中遇到了好多问题，也一点点解决了，而且不得不说还把新买的电脑的键盘敲坏了….<br>不过想想一开始的样子，心里还是蛮欣慰的，填坑中也学到了不少东西，然而主题还没有正式发布到hexo的主题里边，有文档要写，服务器还要配置环境，还要修改bug，和更多功能的开发。</p>
<blockquote>
<p>主题初始的样式</p>
</blockquote>
<p><img src="http://img.blog.csdn.net/20170411154537673?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbW91bWFvYnVjaGl5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="主题初始的样式"></p>
<p>没过几天就要去上海培训了，打算最近完善好主题并且更新到1.0.0的正式版，以及发布到hexo的官方主题文档上。<br>不知道会不会有人用这个主题23333，毕竟接触hexo这个博客框架的人还不多<br>别说博文少哦，时间都拿去开发博客了，还有主题的样式和布局大部分也是自己设计的，不要嫌弃丑啊哈哈</p>
]]></content>
      
        <categories>
            
            <category> 日常 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo主题 </tag>
            
            <tag> vateral </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[meta标签总结]]></title>
      <url>/2017/04/05/meta%E6%A0%87%E7%AD%BE%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><blockquote>
<p>meta 元素可提供有关页面的元信息（meta-information），比如针对搜索引擎和更新频度的描述和关键词。</p>
</blockquote>
<p>以上是w3c上的解释。元信息，是用来描述数据的数据，也就是用来描述当前页面的一些信息。例如：定义页面的说明，关键字、作者等等。</p>
<h2 id="包含的属性"><a href="#包含的属性" class="headerlink" title="包含的属性"></a>包含的属性</h2><p><strong>1.name属性</strong></p>
<p>name 属性提供了名称/值对中的名称（而后面要说的content属性则是该名称对应的值）。假如我们把页面想象成一个我们生活中的实物的话，拿个人简历来作类比，诸如姓名、性别、籍贯、技能、项目经验等等这些都可以看做是个人简历的name属性，content属性相当于这些名称对应的值。</p>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>名称<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>具体的描述<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</code></pre>
<p><strong>2.content属性</strong></p>
<p>content 属性提供了名称/值对中的值。该值可以是任何有效的字符串。<br>content 属性始终要和 name 属性或 http-equiv 属性一起使用。</p>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>名称<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>具体的描述<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</code></pre>
<p><strong>3.http-equiv属性</strong></p>
<p>equiv是equivalent的简写，是相等的，等价物的意思。不难理解，相当于http的文件头作用，它可以向浏览器传回一些有用的信息，以帮助正确和精确地显示网页内容，与之对应的属性值为content，content中的内容其实就是各个参数的变量值。</p>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>名称<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>具体的描述<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</code></pre>
<h2 id="常用的标签"><a href="#常用的标签" class="headerlink" title="常用的标签"></a>常用的标签</h2><p>使用 HTML5 doctype，不区分大小写。</p>
<pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span> //使用 HTML5 doctype，不区分大小写
</code></pre>
<p>声明文档使用的字符编码</p>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html;charset<span class="token punctuation">=</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  //旧的HTML，不推荐
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> //HTML5设定网页字符集的方式，推荐使用UTF-8
</code></pre>
<p>renderer(双核浏览器渲染方式)</p>
<blockquote>
<p>说明：renderer是为双核浏览器准备的，用于指定双核浏览器默认以何种方式渲染页面。比如说360浏览器。</p>
</blockquote>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>renderer<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>webkit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> //默认webkit内核
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>renderer<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie-comp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> //默认IE兼容模式
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>renderer<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie-stand<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> //默认IE标准模式
```html
X-UA-Compatible(浏览器采取何种版本渲染当前页面)

> 说明：用于告知浏览器以何种版本来渲染页面。（一般都设置为最新模式，在各大框架中这个设置也很常见。）

```html
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge,chrome<span class="token punctuation">=</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> 
//指定IE和Chrome使用最新版本渲染当前页面
</code></pre>
<p>refresh(自动刷新并指向某页面)</p>
<blockquote>
<p>说明：网页将在设定的时间内，自动刷新并调向设定的网址。</p>
</blockquote>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Refresh<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5;url<span class="token punctuation">=</span>http://www.w3school.com.cn<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> //5秒后重定向到w3c官网
</code></pre>
<p><strong>SEO 优化</strong></p>
<p>页面描述</p>
<blockquote>
<p>每个网页都应有一个不超过 150 个字符且能准确反映网页内容的描述标签</p>
</blockquote>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>不超过150个字符<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 页面描述 --></span>
</code></pre>
<p>页面关键词</p>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 页面关键词 --></span>
</code></pre>
<p>定义页面标题</p>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
</code></pre>
<p>定义网页作者</p>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name, email@gmail.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 网页作者 --></span>
</code></pre>
<p>定义网页搜索引擎索引方式，robotterms是一组使用英文逗号「,」分割的值，通常有如下几种取值：none，noindex，nofollow，all，index和follow。</p>
<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>robots<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index,follow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 搜索引擎抓取 --></span>
</code></pre>
<p>为移动设备添加 viewport</p>
<pre class=" language-html"><code class="language-html">&lt;meta name ="viewport" content ="initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no">
</code></pre>
<p><a href="http://bigc.at/ios-webapp-viewport-meta.orz" target="_blank" rel="external">width=device-width 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边</a></p>
<blockquote>
<p>content 参数：</p>
<p>width viewport 宽度(数值/device-width) height viewport<br>高度(数值/device-height) initial-scale 初始缩放比例 maximum-scale 最大缩放比例<br>minimum-scale 最小缩放比例 user-scalable 是否允许用户缩放(yes/no) minimal-ui <em>iOS<br>7.1 beta 2</em> 中新增属性（<em>注意：iOS8 中已经删除</em>），可以在页面加载时最小化上下状态栏。这是一个布尔值，可以直接这样写：<meta name="viewport" content="width=device-width, initial-scale=1, minimal-ui"></p>
</blockquote>
<h2 id="以及一些其他的标签"><a href="#以及一些其他的标签" class="headerlink" title="以及一些其他的标签"></a>以及一些其他的标签</h2><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 声明文档使用的字符编码 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>utf-8<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 优先使用 IE 最新版本和 Chrome --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge,chrome<span class="token punctuation">=</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 页面描述 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>不超过150个字符<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 页面关键词 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 网页作者 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name, email@gmail.com<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 搜索引擎抓取 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>robots<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index,follow<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 为移动设备添加 viewport --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>initial-scale<span class="token punctuation">=</span>1, maximum-scale<span class="token punctuation">=</span>3, minimum-scale<span class="token punctuation">=</span>1, user-scalable<span class="token punctuation">=</span>no<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- `width=device-width` 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http://bigc.at/ios-webapp-viewport-meta.orz --></span>

<span class="token comment" spellcheck="true">&lt;!-- iOS 设备 begin --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple-mobile-web-app-title<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>标题<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 添加到主屏后的标题（iOS 6 新增） --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple-mobile-web-app-capable<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>yes<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 --></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple-itunes-app<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app-id<span class="token punctuation">=</span>myAppStoreID, affiliate-data<span class="token punctuation">=</span>myAffiliateData, app-argument<span class="token punctuation">=</span>myURL<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple-mobile-web-app-status-bar-style<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>black<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 设置苹果工具栏颜色 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>format-detection<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>telphone<span class="token punctuation">=</span>no, email<span class="token punctuation">=</span>no<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --></span>
<span class="token comment" spellcheck="true">&lt;!-- 启用360浏览器的极速模式(webkit) --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>renderer<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>webkit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 避免IE使用兼容模式 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 不让百度转码 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Cache-Control<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no-siteapp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>HandheldFriendly<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 微软的老式浏览器 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MobileOptimized<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>320<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- uc强制竖屏 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen-orientation<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>portrait<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- QQ强制竖屏 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>x5-orientation<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>portrait<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- UC强制全屏 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>full-screen<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>yes<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- QQ强制全屏 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>x5-fullscreen<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- UC应用模式 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>browsermode<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>application<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- QQ应用模式 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>x5-page-mode<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- windows phone 点击无高光 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msapplication-tap-highlight<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- iOS 图标 begin --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple-touch-icon-precomposed<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/apple-touch-icon-57x57-precomposed.png<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple-touch-icon-precomposed<span class="token punctuation">"</span></span> <span class="token attr-name">sizes</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>114x114<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/apple-touch-icon-114x114-precomposed.png<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple-touch-icon-precomposed<span class="token punctuation">"</span></span> <span class="token attr-name">sizes</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>144x144<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/apple-touch-icon-144x144-precomposed.png<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- Retina iPad，144x144 像素，可以没有，但推荐有 --></span>
<span class="token comment" spellcheck="true">&lt;!-- iOS 图标 end --></span>

<span class="token comment" spellcheck="true">&lt;!-- iOS 启动画面 begin --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple-touch-startup-image<span class="token punctuation">"</span></span> <span class="token attr-name">sizes</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>768x1004<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/splash-screen-768x1004.png<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- iPad 竖屏 768 x 1004（标准分辨率） --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple-touch-startup-image<span class="token punctuation">"</span></span> <span class="token attr-name">sizes</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1536x2008<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/splash-screen-1536x2008.png<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- iPad 竖屏 1536x2008（Retina） --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple-touch-startup-image<span class="token punctuation">"</span></span> <span class="token attr-name">sizes</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1024x748<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/Default-Portrait-1024x748.png<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- iPad 横屏 1024x748（标准分辨率） --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple-touch-startup-image<span class="token punctuation">"</span></span> <span class="token attr-name">sizes</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2048x1496<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/splash-screen-2048x1496.png<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- iPad 横屏 2048x1496（Retina） --></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple-touch-startup-image<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/splash-screen-320x480.png<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple-touch-startup-image<span class="token punctuation">"</span></span> <span class="token attr-name">sizes</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>640x960<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/splash-screen-640x960.png<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- iPhone/iPod Touch 竖屏 640x960 (Retina) --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>apple-touch-startup-image<span class="token punctuation">"</span></span> <span class="token attr-name">sizes</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>640x1136<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/splash-screen-640x1136.png<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) --></span>
<span class="token comment" spellcheck="true">&lt;!-- iOS 启动画面 end --></span>

<span class="token comment" spellcheck="true">&lt;!-- iOS 设备 end --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msapplication-TileColor<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#000<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- Windows 8 磁贴颜色 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msapplication-TileImage<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>icon.png<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- Windows 8 磁贴图标 --></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alternate<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>application/rss+xml<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>RSS<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/rss.xml<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 添加 RSS 订阅 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shortcut icon<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image/ico<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/favicon.ico<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 添加 favicon icon --></span>

<span class="token comment" spellcheck="true">&lt;!-- sns 社交标签 begin --></span>
<span class="token comment" spellcheck="true">&lt;!-- 参考微博API --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>og:type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>类型<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>og:url<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>URL地址<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>og:title<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>标题<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>og:image<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>图片<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>og:description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>描述<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!-- sns 社交标签 end --></span>
</code></pre>
<p>参考：<a href="https://github.com/yisibl/blog/issues/1" target="_blank" rel="external">常用的 HTML 头部标签</a></p>
]]></content>
      
        <categories>
            
            <category> html </category>
            
        </categories>
        
        
        <tags>
            
            <tag> meta </tag>
            
            <tag> html </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于Promise]]></title>
      <url>/2017/03/28/%E5%85%B3%E4%BA%8EPromise/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><hr>
<p>首先设想一个日常开发常常会遇到的需求：在多个接口异步请求数据，然后利用这些数据来进行一系列的操作。一般会这样去写：</p>
<pre><code>$.ajax({
url: &#39;......&#39;,
success: function (data) {
$.ajax({
// 要在第一个请求成功后才可以执行下一步
url: &#39;......&#39;,
success: function (data) {
// ......
}
});
} });
</code></pre><p>这样的写法的原理是，当执行一些异步操作时，我们需要知道操作是否已经完成，所有当执行完成的时候会返回一个回调函数，表示操作已经完成。</p>
<p>使用回调函数的形式理解起来并不困难，但是实际的应用当中会有以下的缺点：</p>
<blockquote>
<p>1.在需要多个操作的时候，会导致多个回调函数嵌套，导致代码不够直观，就是常说的 Callback Hell。<br>2.如果几个异步操作之间并没有前后顺序之分（例如不需要前一个请求的结果作为后一个请求的参数）时，同样需要等待上一个操作完成再实行下一个操作。</p>
</blockquote>
<p>为了解决上述的问题，Promise 对象应运而生，在 EMCAScript 2015 当中已经成为标准。</p>
<h2 id="什么是-Promise"><a href="#什么是-Promise" class="headerlink" title="什么是 Promise"></a>什么是 Promise</h2><hr>
<blockquote>
<p>一个 Promise 对象可以理解为一次将要执行的操作（常常被用于异步操作），使用了 Promise<br>对象之后可以用一种链式调用的方式来组织代码，让代码更加直观。而且由于 Promise.all<br>这样的方法存在，可以让同时执行多个操作变得简单。接下来就来简单介绍 Promise 对象。</p>
</blockquote>
<p><strong>resolve 和 reject</strong></p>
<p>首先来看一段使用了 Promise 对象的代码。首先来看一段使用了 Promise 对象的代码。</p>
<pre><code>function helloWorld (ready) {
return new Promise(function (resolve, reject) {
if (ready) {
resolve(&quot;Hello World!&quot;);
} else {
reject(&quot;Good bye!&quot;);
}
});
}

helloWorld(true).then(function (message) {
alert(message);
}, function (error) {
alert(error);
});
</code></pre><p>上面的代码实现的功能非常简单，helloWord 函数接受一个参数，如果为 true 就打印 “Hello World!”，如果为 false 就打印错误的信息。helloWord 函数返回的是一个 Promise 对象。</p>
<p>在 Promise 对象当中有两个重要方法————resolve 和 reject。</p>
<p>resolve 方法可以使 Promise 对象的状态改变成成功，同时传递一个参数用于后续成功后的操作，在这个例子当中就是 Hello World! 字符串。</p>
<p>reject 方法则是将 Promise 对象的状态改变为失败，同时将错误的信息传递到后续错误处理的操作。</p>
<p><strong>Promise 的三种状态</strong></p>
<p>上面提到了 resolve 和 reject 可以改变 Promise 对象的状态，那么它究竟有哪些状态呢？</p>
<blockquote>
<p>Promise 对象有三种状态：</p>
<p>1.Fulfilled 可以理解为成功的状态<br>2.Rejected 可以理解为失败的状态 Pending 既不是 Fulfilld 也不是<br>3.Rejected 的状态，可以理解为 Promise 对象实例创建时候的初始状态</p>
</blockquote>
<p>helloWorld 的例子中的 then 方法就是根据 Promise 对象的状态来确定执行的操作，resolve 时执行第一个函数（onFulfilled），reject 时执行第二个函数（onRejected）。</p>
<p><strong>then 和 catch</strong></p>
<p><strong>then</strong></p>
<p>helloWorld 的例子当中利用了 then(onFulfilld, onRejected) 方法来执行一个任务打印 “Hello World!”，在多个任务的情况下 then 方法同样可以用一个清晰的方式完成。</p>
<pre><code>function printHello (ready) {
return new Promise(function (resolve, reject) {
if (ready) {
resolve(&quot;Hello&quot;);
} else {
reject(&quot;Good bye!&quot;);
}
});
}

function printWorld () {
alert(&quot;World&quot;);
}

function printExclamation () {
alert(&quot;!&quot;);
}

printHello(true)
.then(function(message){
alert(message);
})
.then(printWorld)
.then(printExclamation);
</code></pre><p>上述例子通过链式调用的方式，按顺序打印出了相应的内容。then 可以使用链式调用的写法原因在于，每一次执行该方法时总是会返回一个 Promise 对象。另外，在 then onFulfilled 的函数当中的返回值，可以作为后续操作的参数，因此上面的例子也可以写成：</p>
<pre><code>printHello(true).then(function (message) {
return message;
}).then(function (message) {
return message  + &#39; World&#39;;
}).then(function (message) {
return message + &#39;!&#39;;
}).then(function (message) {
alert(message);
});
</code></pre><p><strong>catch</strong><br>catch 方法是 then(onFulfilled, onRejected) 方法当中 onRejected 函数的一个简单的写法，也就是说可以写成 then(fn).catch(fn)，相当于 then(fn).then(null, fn)。使用 catch 的写法比一般的写法更加清晰明确。</p>
<pre><code>somePromise().then(function () {
return anotherPromise();
}).then(function () {
return yetAnotherPromise();
}).catch(console.log.bind(console)); // &lt;-- this is badass
</code></pre><p><strong>Promise.all 和 Promise.race</strong></p>
<p>Promise.all 可以接收一个元素为 Promise 对象的数组作为参数，当这个数组里面所有的 Promise 对象都变为 resolve 时，该方法才会返回。</p>
<pre><code>var p1 = new Promise(function (resolve) {
setTimeout(function () {
resolve(&quot;Hello&quot;);
}, 3000);
});

var p2 = new Promise(function (resolve) {
setTimeout(function () {
resolve(&quot;World&quot;);
}, 1000);
});

Promise.all([p1, p2]).then(function (result) {
console.log(result); // [&quot;Hello&quot;, &quot;World&quot;]
});
</code></pre><p>上面的例子模拟了传输两个数据需要不同的时长，虽然 p2 的速度比 p1 要快，但是 Promise.all 方法会按照数组里面的顺序将结果返回。</p>
<p>日常开发中经常会遇到这样的需求，在不同的接口请求数据然后拼合成自己所需的数据，通常这些接口之间没有关联（例如不需要前一个接口的数据作为后一个接口的参数），这个时候 Promise.all 方法就可以派上用场了。</p>
<p>还有一个和 Promise.all 相类似的方法 Promise.race，它同样接收一个数组，不同的是只要该数组中的 Promise 对象的状态发生变化（无论是 resolve 还是 reject）该方法都会返回。</p>
<h2 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h2><hr>
<p><img src="https://segmentfault.com/img/bVmrXU" alt="这里写图片描述"><br>在浏览器端，一些主流的浏览器都已经可以使用 Promise 对象进行开发，在 Node.js 配合 babel 也可以很方便地使用。</p>
<p>如果要兼容旧的浏览器，建议可以寻找一些第三方的解决方案，例如 jQuery 的 $.Deferred。</p>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> promise </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JS中的回调函数]]></title>
      <url>/2017/03/24/JS%E4%B8%AD%E7%9A%84%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<h4 id="关于回调函数"><a href="#关于回调函数" class="headerlink" title="关于回调函数"></a>关于回调函数</h4><p>首先要了解，在 js 中，函数也是对象，可以赋值给变量，可以作为参数放在函数的参数列表中。比如：</p>
<pre class=" language-JavaScript"><code class="language-JavaScript">var doSomething = function(a,b)
{
return a + b;
}
</code></pre>
<p>这段代码的意思是定义一个匿名函数，这个匿名函数除了没有名字之外，其他跟普通的函数没有什么两样。然后把匿名函数赋值给变量doSomething。接下来我们调用：</p>
<pre class=" language-JavaScript"><code class="language-JavaScript">console.log(doSomething(2,3));//5
</code></pre>
<p>回调函数，就是放在另外一个函数（如 parent）的参数列表中，作为参数传递给这个 parent，然后在 parent 函数体的某个位置执行:</p>
<pre class=" language-JavaScript"><code class="language-JavaScript">var doit = function(callback)
{
var a = 1,
b = 2,
c = 3;
var t = callback(a,b,c);
return t + 10;
};
var d = doit(function(x,y,z){
return (x+y+z);
});
console.log(d);
</code></pre>
<p>先定义 doit 函数，有一个参数 callback。这个 callback 就是回调函数，名字可以任意取。看函数体，先定义三个变量 a,b,c。然后调用 callback 函数。最后返回一个值。</p>
<p>下面就调用 doit 函数了。要注意的是，刚才定义 doit 时，callback 并没有定义，所以刚才并不知道 callback 是干什么用的。这其实很好理解，我们平时定义函数的时候，参数也只是给出了一个名字，比如 a,在函数体中使用 a，但整个过程也并不知道 a 到底是什么，只有在调用那个函数的时候才指定 a 的具体值，比如2.回过头来，在调用 doit 的时候，我们就需要指定 callback 究竟是个什么东西了。可以看到，这个函数完成了一个 sum 功能。</p>
<p>上述代码的执行过程是：</p>
<p>调用 doit函数，参数是一个匿名函数；进入 doit 的函数体中，先定义 a,b,c，然后执行刚才的匿名函数，参数是 a,b,c，并返回一个 t，最后返回一个 t+10给 d。</p>
<hr>
<p>传统函数以参数形式输入数据，并且使用返回语句返回值。理论上，在函数结尾处有一个return返回语句，结构上就是：一个输入点和一个输出点。这比较容易理解，函数本质上就是输入和输出之间实现过程的映射。</p>
<p>但是，当函数的实现过程非常漫长，你是选择等待函数完成处理，还是使用回调函数进行异步处理呢？这种情况下，使用回调函数变得至关重要，例如：AJAX请求。若是使用回调函数进行处理，代码就可以继续进行其他任务，而无需空等。实际开发中，经常在javascript中使用异步调用，甚至在这里强烈推荐使用。</p>
<p>因此，回调本质上是一种设计模式，并且jQuery(包括其他框架)的设计原则遵循了这个模式。</p>
<p>在JavaScript中，回调函数具体的定义为：函数A作为参数(函数引用)传递到另一个函数B中，并且这个函数B执行函数A。我们就说函数A叫做回调函数。如果没有名称(函数表达式)，就叫做匿名回调函数。</p>
<pre class=" language-JavaScript"><code class="language-JavaScript">//基本方式
function doSomething(callback) {
// … 
// Call the callback
callback('stuff', 'goes', 'here');
} 
function foo(a, b, c) {
// I'm the callback
alert(a + " " + b + " " + c);
} 
doSomething(foo);
</code></pre>
<pre class=" language-JavaScript"><code class="language-JavaScript">//匿名函数的形式
function dosomething(damsg, callback){
alert(damsg);
if(typeof callback == "function") 
callback();
} 
dosomething("回调函数", function(){
alert("和 jQuery 的 callbacks 形式一样!");
});
</code></pre>
<p>所以callback 不一定用于异步，一般同步(阻塞)的场景下也经常用到回调，比如要求执行某些操作后执行回调函数。</p>
<p><strong>回调什么时候执行</strong></p>
<p>回调函数，一般在同步情境下是最后执行的，而在异步情境下有可能不执行，因为事件没有被触发或者条件不满足。</p>
<p><strong>回调函数的使用场合</strong></p>
<p>资源加载：动态加载js文件后执行回调，加载iframe后执行回调，ajax操作回调，图片加载完成执行回调，AJAX等等。</p>
<p>DOM事件及Node.js事件基于回调机制(Node.js回调可能会出现多层回调嵌套的问题)。</p>
<p>setTimeout的延迟时间为0，这个hack经常被用到，settimeout调用的函数其实就是一个callback的体现</p>
<p>链式调用：链式调用的时候，在赋值器(setter)方法中(或者本身没有返回值的方法中)很容易实现链式调用，而取值器(getter)相对来说不好实现链式调用，因为你需要取值器返回你需要的数据而不是this指针，如果要实现链式方法，可以用回调函数来实现setTimeout、setInterval的函数调用得到其返回值。由于两个函数都是异步的，即：他们的调用时序和程序的主流程是相对独立的，所以没有办法在主体里面等待它们的返回值，它们被打开的时候程序也不会停下来等待，否则也就失去了setTimeout及setInterval的意义了，所以用return已经没有意义，只能使用callback。callback的意义在于将timer执行的结果通知给代理函数进行及时处理。</p>
<p><strong>回调函数的传递</strong></p>
<pre class=" language-JavaScript"><code class="language-JavaScript">$.get('myhtmlpage.html', myCallBack);//这是对的
$.get('myhtmlpage.html', myCallBack('foo', 'bar'));//这是错的，那么要带参数呢？
$.get('myhtmlpage.html', function(){//带参数的使用函数表达式
myCallBack('foo', 'bar');
});
</code></pre>
<blockquote>
<p>另外，最好保证回调存在且必须是函数引用或者函数表达式： (callback &amp;&amp; typeof(callback) ===<br>“function”) &amp;&amp; callback();</p>
</blockquote>
<hr>
<h4 id="回调函数使用实例"><a href="#回调函数使用实例" class="headerlink" title="回调函数使用实例"></a>回调函数使用实例</h4><pre class=" language-JavaScript"><code class="language-JavaScript">//使用call方法
function Thing(name) {
this.name = name;
}
Thing.prototype.doSomething = function(callback) {
// Call our callback, but using our own instance as the context
callback.call(this);
}

function foo() {
alert(this.name);
}

var t = new Thing('Joe');
t.doSomething(foo); // Alerts "Joe" via `foo`
</code></pre>
<pre class=" language-JavaScript"><code class="language-JavaScript">//传参数
function Thing(name) {
this.name = name;
}
Thing.prototype.doSomething = function(callback, salutation) {
// Call our callback, but using our own instance as the context
callback.call(this, salutation);
} 
function foo(salutation) {
alert(salutation + " " + this.name);
} 
var t = new Thing('Joe');
t.doSomething(foo, 'Hi'); // Alerts "Hi Joe" via `foo`
</code></pre>
<pre class=" language-JavaScript"><code class="language-JavaScript">//使用apply传参
function Thing(name) {
this.name = name;
}
Thing.prototype.doSomething = function(callback) {
// Call our callback, but using our own instance as the context
callback.apply(this, ['Hi', 3, 2, 1]);
} 
function foo(salutation, three, two, one) {
alert(salutation + " " + this.name + " – " + three + " " + two + " " + one);
} 
var t = new Thing('Joe');
t.doSomething(foo); // Alerts "Hi Joe – 3 2 1" via `foo`
</code></pre>
<pre class=" language-JavaScript"><code class="language-JavaScript">//假如提供的数据源是一整数,为某学生的分数,当num<=0,由底层处理,当n>0时由高层处理.
//将下面这个函数拷贝下来存盘为1.js
function f(num,callback){
if(num<0) { 
alert("调用低层函数处理!");
alert("分数不能为负,输入错误!"); 
}else if(num==0){
alert("调用低层函数处理!");
alert("该学生可能未参加考试！");
}else{
alert("调用高层函数处理!");
callback();
}
}
</code></pre>
<pre class=" language-html"><code class="language-html">//将下面这个test.html文件存盘与1.js在一个目录下：
<span class="token doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd"></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>gb2312<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>无标题文档<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
function test(){
var p=document.getElementById("pp");
pp.innerText="";
var num=document.getElementById("score").value;
f(num,function(){ //匿名高层处理函数
if(num&lt;60) alert("未及格！");
else if(num&lt;=90) alert("该生成绩优良！");
else alert("该生成绩优秀!"); })
pp.innerText="by since1978 qq558064!"
}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
回调函数示例:当学生成绩score&lt;=0分时候，由底层处理；当score>0时，由高层处理。
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
请输入学生成绩<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>score<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test()<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> 看看结果<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>
</code></pre>
<pre class=" language-JavaScript"><code class="language-JavaScript">//node.js中出现的回调函数
app.use(function(req, res, next) {
var err = new Error('Not Found');
err.status = 404;
next(err);
});
</code></pre>
<hr>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>回调函数是实现js异步编程的四种方法之一，但并不推荐用此方法： 回调函数的优点是简单、容易理解和部署，缺点是不利于代码的阅读和维护，各个部分之间高度耦合（Coupling），流程会很混乱，而且每个任务只能指定一个回调函数。</p>
<p>不过正如上文所说，回调函数不一定用于异步，一般同步(阻塞)的场景下也经常用到回调，比如要求执行某些操作后执行回调函数。</p>
<blockquote>
<p>在javascript中回调函数非常重要，它们几乎无处不在</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> 回调函数 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[什么是动态HTML？-DHTML]]></title>
      <url>/2017/03/23/%E4%BB%80%E4%B9%88%E6%98%AF%E5%8A%A8%E6%80%81HTML%EF%BC%9F-DHTML/</url>
      <content type="html"><![CDATA[<p>DHTML是Dynamic HTML的简称，中文译为“动态超文本标记语言”，主要用途是提**TML页面的交互性和可操作性。它是建立在传统HTML基础上的客户端动态技术，是一种技术的总称，它通过HTML、VBScript、JavaScript邮和CSS等语言、技术使网页能够具有动态交互功能。虽然HTML语言可以制作出具有复杂格式的网页，但这样制作出来的网页只包含静态内容。凡是网页上有任何信息需要更新，浏览器就必须从服务器上重新下载整个网页，因而给网络造成极大的负担。它是建立在传统HTML基础上的客户端动态技术。</p>
<p>DHTML实现了网页从Web服务器下载后无需再经过服务的处理，而在浏览器中直接动态地更新网页的内容、排版样式和动画的功能。例如，当鼠标指针移到文章段落中时，段落能够变成蓝色，或者当鼠标指针移到一个超级链接上时，会自动生成一个下拉式子链接目录等。这是近年来网络飞速发展进程中员振奋人心也最具实用性的技术之一。DHTML是一种通过各种技术的综合发展而来的概念，这些技术包括JavaScript、VBScript、DOM(Document Object Mode，文档对象模型)、Layers和CSS(Cascading Style Sheets，层又叠样式表)等。目前IE4．0以上的大多数浏览器都加入了对DHTML的支持，主要包括以下内容：</p>
<blockquote>
<p>①动态内容(Dynamic Content)：动态地更新网页内容，可“动态”地插入、修改或删除网页的元件，如文字、图像、标记等。​</p>
<p>②动态排版样式(Dynamic Style<br>Sheets)：W3C的CSS样式表提供了设定HTML标记的字体大小、字形、样式、粗细、文字颜色、行高度、加底线或加中间横线、缩排、与边缘距离、靠左右或置中、背景图片或颜色等排版功能，而“动态排版样式”即可以“动态”地改变排版样式。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> html </category>
            
        </categories>
        
        
        <tags>
            
            <tag> html </tag>
            
            <tag> dhtml </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JS中this的指向]]></title>
      <url>/2017/03/22/JS%E4%B8%ADthis%E7%9A%84%E6%8C%87%E5%90%91/</url>
      <content type="html"><![CDATA[<p><strong>this是Javascript语言的一个关键字。</strong> </p>
<p>它代表函数运行时，自动生成的一个内部对象，只能在函数内部使用。比如:</p>
<pre><code>function test(){ 

　　　　this.x = 1; 

　　}
</code></pre><blockquote>
<p>随着函数使用场合的不同，this的值会发生变化。但是有一个总的原则，那就是this指的是，调用函数的那个对象。</p>
</blockquote>
<p>下面分四种情况，详细讨论this的用法。<br><a id="more"></a></p>
<p><strong>情况一：纯粹的函数调用</strong> </p>
<p>这是函数的最通常用法，属于全局性调用，因此this就代表全局对象。</p>
<p>请看下面这段代码，它的运行结果是1。</p>
<pre><code>function test(){ 

　　　　this.x = 1; 

　　　　alert(this.x); 

　　} 

　　test(); // 1
</code></pre><p>为了证明this就是全局对象，我对代码做一些改变：</p>
<pre><code>var x = 1; 

　　function test(){ 

　　　　alert(this.x); 

　　} 

　　test(); // 1
</code></pre><p>运行结果还是1。再变一下：</p>
<pre><code>var x = 1; 

　　function test(){ 

　　　　this.x = 0; 

　　} 

　　test(); 

　　alert(x); //0
</code></pre><p><strong>情况二：作为对象方法的调用</strong> </p>
<p>函数还可以作为某个对象的方法调用，这时this就指这个上级对象。</p>
<pre><code>function test(){ 

　　　　alert(this.x); 

　　} 

　　var o = {}; 

　　o.x = 1; 

　　o.m = test; 

　　o.m(); // 1
</code></pre><p><strong>情况三 作为构造函数调用</strong> </p>
<p>所谓构造函数，就是通过这个函数生成一个新对象（object）。这时，this就指这个新对象。</p>
<pre><code>function test(){ 

　　　　this.x = 1; 

　　} 

　　var o = new test(); 

　　alert(o.x); // 1
</code></pre><p>运行结果为1。为了表明这时this不是全局对象，我对代码做一些改变：</p>
<pre><code>var x = 2; 

　　function test(){ 

　　　　this.x = 1; 

　　} 

　　var o = new test(); 

　　alert(x); //2
</code></pre><p>运行结果为2，表明全局变量x的值根本没变。</p>
<p><strong>情况四 apply调用</strong></p>
<p>apply()是函数对象的一个方法，它的作用是改变函数的调用对象，它的第一个参数就表示改变后的调用这个函数的对象。因此，this指的就是这第一个参数</p>
<p>　</p>
<pre><code>var x = 0; 

　　function test(){ 

　　　　alert(this.x); 

　　} 

　　var o={}; 

　　o.x = 1; 

　　o.m = test; 

　　o.m.apply(); //0
</code></pre><p>apply()的参数为空时，默认调用全局对象。因此，这时的运行结果为0，证明this指的是全局对象。 </p>
<p>如果把最后一行代码修改为 :</p>
<pre><code>o.m.apply(o); //1
</code></pre><p>运行结果就变成了1，证明了这时this代表的是对象o</p>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> this </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ js中Math.random()生成指定范围数值的随机数]]></title>
      <url>/2017/03/20/js%E4%B8%ADMath-random-%E7%94%9F%E6%88%90%E6%8C%87%E5%AE%9A%E8%8C%83%E5%9B%B4%E6%95%B0%E5%80%BC%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0/</url>
      <content type="html"><![CDATA[<p><strong>定义和用法</strong></p>
<p>random() 方法可返回介于 0 ~ 1 之间的一个随机数。</p>
<p><strong>语法</strong></p>
<p>Math.random()</p>
<p><strong>返回值</strong></p>
<p>0.0 ~ 1.0 之间的一个伪随机数。</p>
<p><strong>实例</strong></p>
<p>在本例中，我们将取得介于 0 到 1 之间的一个随机数：</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>
document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>
<span class="token comment" spellcheck="true">// 输出：</span>
<span class="token number">0.15246391076246546</span>
</code></pre>
<p><strong>关于如何生成指定范围值的随机数？</strong></p>
<blockquote>
<p>利用 parseInt()、Math.floor() 或者 Math.ceil()进行四舍五入处理</p>
</blockquote>
<p>我们看到，直接使用Math.random()方法，生成的是一个小于1的数，所以：</p>
<blockquote>
<p>Math.random()*5</p>
</blockquote>
<p>得到的结果是一个小于5的随机数。而我们通常希望得到的是0-5之间的整数，所以我们需要对得到的结果四舍五入处理一下，从而得到我们期望的整数。parseInt()、Math.floor()和Math.ceil()都可以起到四舍五入的作用。</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> randomNum <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span>randomNum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 2.9045290905811183 </span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>randomNum<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 2</span>
<span class="token function">alert</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>randomNum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 2</span>
<span class="token function">alert</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>randomNum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 3</span>
</code></pre>
<p>由测试的代码我们可以看到，<code>parseInt()</code>和<code>Math.floor()</code>的效果是一样的，都是向下取整数部分。所以<code>parseInt(Math.random()*5,10)</code>和<code>Math.floor(Math.random()*5)</code>都是生成的0-4之间的随机数，<code>Math.ceil(Math.random()*5)</code>则是生成的1-5之间的随机数。</p>
<p><strong>生成指定范围数值随机数</strong></p>
<p>如果你希望生成1到任意值的随机数，公式就是这样的：</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// max - 期望的最大值</span>
<span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>max<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>max<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>如果你希望生成0到任意值的随机数，公式就是这样的：</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// max - 期望的最大值</span>
<span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>max<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>max<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>如果你希望生成任意值到任意值的随机数，公式就是这样的：</p>
<pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// max - 期望的最大值</span>
<span class="token comment" spellcheck="true">// min - 期望的最小值 </span>
<span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>max<span class="token operator">-</span>min<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span>min<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>max<span class="token operator">-</span>min<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Node.js部署到阿里云服务器]]></title>
      <url>/2017/03/16/nodejs%E9%83%A8%E7%BD%B2%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E5%85%A8%E8%BF%87%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p>整个部署过程学到了不少东西，记录一下。</p>
<blockquote>
<p>参考了以下文章：<br> <a href="http://itbilu.com/other/relate/NJ2TJohl.html" target="_blank" rel="external">http://itbilu.com/other/relate/NJ2TJohl.html</a><br><a href="https://segmentfault.com/a/1190000004051670" target="_blank" rel="external">https://segmentfault.com/a/1190000004051670</a><br><a href="http://borninsummer.com/2015/06/17/notes-on-developing-nodejs-webapp/" target="_blank" rel="external">http://borninsummer.com/2015/06/17/notes-on-developing-nodejs-webapp/</a><br><a href="https://bbs.aliyun.com/read/146189.html" target="_blank" rel="external">https://bbs.aliyun.com/read/146189.html</a></p>
</blockquote>
<p><strong>1. 到阿里云购买云服务器 ECS 。</strong><br><a href="https://www.aliyun.com/product/ecs" target="_blank" rel="external">https://www.aliyun.com/product/ecs</a><br>如果是在校学生，在淘宝有实名认证，且在学信网有注册，可以试试抢学生的首月优惠套餐。<a href="https://www.aliyun.com/act/aliyun/campus.html" target="_blank" rel="external">https://www.aliyun.com/act/aliyun/campus.html</a><br>作为一个穷逼+不熟悉服务器配置的菜鸟。选了最便宜的套餐：<br>CPU： 1核 / 内存： 1024 MB / 带宽：1Mbps / 操作系统： CentOS 7.0<br>购买环节会设置 ssh 登陆密码，记下密码。<br>登陆到阿里云，查看购买的实例。<br>注意公网 IP，下一步会用到<br><img src="http://img.blog.csdn.net/20170212142340544?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbW91bWFvYnVjaGl5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="购买的实例"><br><strong>2. 登陆服务器</strong><br>sudo ssh 你的服务器ip地址</p>
<blockquote>
<p>关于 ssh 登陆，具体可以看<a href="http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html</a> 这篇文章。</p>
</blockquote>
<p>提示输入mac的密码，提示输入服务器密码。<br>输入后连接成功并显示服务器信息，如下：<br><img src="http://img.blog.csdn.net/20170212142549327?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbW91bWFvYnVjaGl5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="成功的状态"></p>
<p>登陆服务器后。这里对于我这个 Linux 菜鸟有个大坑………就是 Linux 系统常见的目录结构和文件放置区域。<br>使用 root 用户身份登陆后，会直接进入到下图 红色箭头标出的 root 目录下。先 cd .. 跳转到上一层, 再 ls -a ，就可以看到类似下图的目录结构了。</p>
<p><img src="http://img.blog.csdn.net/20170212142640688?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbW91bWFvYnVjaGl5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="图片引用自《鸟哥的Linux》"></p>
<p><strong>3.安装 node 和 mongodb</strong></p>
<blockquote>
<p>node – 编译后二进制文件应在/usr/local/bin/node 下<br> mongodb –安装在/usr/local/mongodb 下</p>
</blockquote>
<p>下面就一步一步来，首先升级CentOS</p>
<pre><code>yum -y update
</code></pre><p>升级后，跳转到 /usr/local/src , 这个文件夹通常用来存放软件源代码</p>
<pre><code>cd /usr/local/src
</code></pre><p>下载 nodejs 代码，也可以使用scp命令直接上传，因为下载实在太慢了。</p>
<pre><code>wget http://nodejs.org/dist/v0.12.5/node-v0.12.5.tar.gz
//注*根据最新版本号为准
</code></pre><p>解压</p>
<pre><code>tar -xzvf node-v0.12.5.tar.gz
</code></pre><p>进入解压后的文件夹</p>
<pre><code>cd node-v0.12.5
</code></pre><p>执行配置脚本来进行编译预处理</p>
<pre><code>./configure
</code></pre><p>编译源代码</p>
<pre><code>make
//注*这个时间可能会很久
</code></pre><p>当编译完成后，需要使之在系统范围内可用, 编译后的二进制文件将被放置到系统路径，默认情况下，Node二进制文件应该放在/user/local/bin/node文件夹下</p>
<pre><code>make install
</code></pre><p>安装 express 和 forever，这两个模块都推荐 global 安装</p>
<pre><code>npm -g install express forever
</code></pre><p>建立超级链接, 不然 sudo node 时会报 “command not found”</p>
<pre><code>sudo ln -s /usr/local/bin/node /usr/bin/node
sudo ln -s /usr/local/lib/node /usr/lib/node
sudo ln -s /usr/local/bin/npm /usr/bin/npm
sudo ln -s /usr/local/bin/node-waf /usr/bin/node-waf
sudo ln -s /usr/local/bin/forever /usr/bin/forever
</code></pre><p>Nodejs到这里就基本安装完成了。</p>
<p><strong>下面来安装mongodb</strong></p>
<blockquote>
<p>软件安装位置：/usr/local/mongodb<br>数据存放位置：/var/mongodb/data<br>日志存放位置：/var/mongodb/logs</p>
</blockquote>
<p>首先下载安装包</p>
<pre><code>cd /usr/local
wget http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-2.4.9.tgz
</code></pre><p>解压安装包，重命名文件夹为mongodb</p>
<pre><code>tar zxvf mongodb-linux-x86_64-2.6.0.tgz
mv mongodb-linux-x86_64-2.6.0 mongodb
</code></pre><p>创建数据和日志存放目录</p>
<pre><code>mkdir /var/mongodb
mkdir /var/mongodb/data
mkdir /var/mongodb/logs
</code></pre><p>打开rc.local文件，添加CentOS开机启动项：</p>
<pre><code>vim /etc/rc.d/rc.local
</code></pre><p>将mongodb启动命令追加到本文件中，让mongodb开机自启动：</p>
<pre><code>/usr/local/mongodb/bin/mongod --dbpath=/var/mongodb/data --logpath 
/var/mongodb/logs/log.log -fork
</code></pre><p>关闭 vim 后，直接手动启动mongodb</p>
<pre><code>/usr/local/mongodb/bin/mongod --dbpath=/var/mongodb/data --logpath 
/var/mongodb/logs/log.log -fork
</code></pre><p>看到类似的信息，说明已启动成功。我在这里发了个傻，以为26308是port号，导致后面设置port时折腾了好久。其实这里的 forked process 和 port 号是两个东西， 这个是程序本身在Server上的进程。</p>
<pre><code>forked process: 26308
</code></pre><p>启动mongo shell</p>
<pre><code>cd /usr/local/mongodb/bin/
./mongo
</code></pre><p>在 mongo shell 中创建管理员及数据库</p>
<pre><code>use admin //admin 数据库
db.createUser({
user: &quot;用户名&quot;,
pwd:&quot;登陆密码&quot;,
roles:[&quot;userAdminAnyDatabase&quot;] //超级管理员
})

use databaseFoo //nodeapp 要连接的数据库
db.createUser({
user: &quot;用户名&quot;,
pwd:&quot;登陆密码&quot;,
roles:[&quot;readWrite&quot;] //读写权限
})
</code></pre><p>到这里 mongodb 基本已经安装设置完成了。具体数据的迁移导入可自行研究。</p>
<p><strong>4.配置及启动node app</strong></p>
<p>我们把 nodeapp 的程序放在 /home 下</p>
<pre><code>cd /home
</code></pre><p>我使用 <a href="http://git.oschina.net/" target="_blank" rel="external">http://git.oschina.net/</a> 管理代码。它的私有库是免费的。基本操作和 github 一样。<br>复制代码：</p>
<pre><code>git clone https://git.oschina.net/xxxxxxx/nodeapp.git   //你的repo地址
</code></pre><p>注*同时可以使用图形化程序进行上传如File Zilla<img src="http://img.blog.csdn.net/20170212201742447?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbW91bWFvYnVjaGl5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="FZ"><br>进入 nodeapp 文件夹</p>
<pre><code>cd nodeapp
</code></pre><p>（若后续代码变更，提交到 git repo 后直接git pull即可部署代码）<br>安装nodeapp的所有依赖</p>
<pre><code>npm install
</code></pre><p>在启动文件 ( 我的是 app.js ) 中设置数据库连接</p>
<pre><code>vim app.js
</code></pre><p>数据库连接类似下面的格式，由于数据库安装在同一服务器，因此 host 为127.0.0.1：</p>
<pre><code>var dbUrl = &#39;mongodb://用户名:登陆密码@127.0.0.1/databaseFoo&#39;;
mongoose.connect(dbUrl)
</code></pre><p>这里要注意，如果直接 npm start 或 node app.js 启动，则一旦退出 ssh 远程登陆，nodeapp 就会停止运行。因此我们使用 forever 启动 nodeapp。</p>
<pre><code>NODE_ENV=production forever start app.js
</code></pre><blockquote>
<p>如今可以使用PM2启动程序，步骤如下：<br>使用它要先安装它，用root账号和全局模式安装一下：<br><code>npm install -g pm2</code><br>用它来启动程序（在当前目录下可以直接启动）<br><code>pm2 start app.js --name uops</code></p>
</blockquote>
<p>在蹚过无数坑后，项目部署成功。用浏览器打开 公网IP:端口号 即可看到 nodeapp 的首页</p>
]]></content>
      
        <categories>
            
            <category> node.js </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> Node.js </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/01/28/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span>
</code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server
</code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate
</code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy
</code></pre>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> 日常 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HelloWorld </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
